require(stats)
ts(1:20)
for(i in 1:3) print(1:i)
t1 <- round(abs(rt(200, df = 1.8)))
t2 <- round(abs(rt(200, df = 1.4)))
table(t1, t2) # simple
print(table(t1, t2), zero.print = ".")
key
df %>% arrange(cyl, mpg)
df %>% group_by(cyl) %>% slice(mpg, n = 5)
df
str(df)
df %>% group_by(cyl) %>% slice(n = 5)
df %>% group_by(cyl, mpg) %>% slice(n = 5)
df %>% group_by(cyl) %>% slice(n = 5)
View(df)
df %>% group_by(cyl) %>% arrange(mpg) %>% slice(n = 5) #5th one
df %>%  arrange(cyl, mpg) %>% group_by(cyl) %>% slice(n = 5) #5th one
setwd("./blogdown-even")
blogdown::build_site()
blogdown::serve_site()
library(magrittr)
library(htmlwidgets)
library(leaflet)
library(widgetframe)
library(leaflet)
library(widgetframe)
library(magrittr)
l % addTiles() %>% setView(0,0,1)
library(htmlwidgets)
library(leaflet)
library(widgetframe)
library(leaflet)
library(widgetframe)
library(magrittr)
l %>% addTiles() %>% setView(0,0,1)
?leaflet
library(leaflet)
library(widgetframe)
library(magrittr)
m <- leaflet() %>% addTiles()
frameWidget(m)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidget", "magrittr")
lapply(my.pkgs, library, character.only = T)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidgets", "magrittr")
lapply(my.pkgs, library, character.only = T)
?library
lapply(my.pkgs, library, character.only = T, quietly = T)
lapply(my.pkgs, library, character.only = T, quietly = T, verbose = F)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidgets", "magrittr")
lapply(my.pkgs, function(x) suppressPackageStartupMessages(library(x, character.only = T)))
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
setwd("..")
setwd("./blogdown-default")
serve_site()
library(blogdown)
serve_site
serve_site()
stop_server()
serve_site()
?blogdown::build_site
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
list.files("./static/img/site", full.names = T)
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = F)
blogdown::build_site(build_rmd = F)
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site(build_rmd = F)
blogdown::serve_site()
blogdown::stop_server()
a <- 1:2
paste(a, "fish" sep ="_")
a <- 1:2
paste(a, "fish", sep ="_")
data(mtcars)
p <- ggplot(mtcars, aes(mpg, hp, group = cyl, color = cyl))
data(mtcars)
p <- ggplot(mtcars, aes(mpg, hp, group = cyl, color = cyl))
p <- p + geom_point()
p
data(mtcars)
p <- ggplot(mtcars, aes(mpg, hp, group = factor(cyl), color = factor(cyl)))
p <- p + geom_point()
p
data(mtcars)
p <- ggplot(mtcars, aes(mpg, hp, group = factor(cyl), color = factor(cyl)))
p <- p + geom_point()
p <- p + ggtitle("Mtcars")
p
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site(build_rmd = T)
blogdown::start_server()
blogdown::serve_site()
#Dr Seuss
a <- 1:2
paste(a, "fish", sep ="_")
?rmarkdown::html_document
blogdown::stop_server()
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
library(blogdown)
build_site(build_rmd = T)
build_site(build_rmd = T)
# Dr Seuss
a <- 1:2
fish.number <- paste(a, "fish", sep ="_")
b <- c("red", "blue")
fish.color <- paste(b, "fish", sep = "_")
print(c(fish.number, fish.color))
# Dr Seuss
a <- 1:2
fish.number <- paste(a, "fish", sep ="_")
b <- c("red", "blue")
fish.color <- paste(b, "fish", sep = "_")
print(fish.number, fish.color)
# Dr Seuss
a <- 1:2
fish.number <- paste(a, "fish", sep ="_")
b <- c("red", "blue")
fish.color <- paste(b, "fish", sep = "_")
print(fish.number)
serve_site()
# Dr Seuss
a <- 1:2
fish.number <- paste(a, "fish", sep ="_")
b <- c("red", "blue")
fish.color <- paste(b, "fish", sep = "_")
print(c(fish.number, fish.color)
stop_server()
serve_site()
blogdown:::new_post_addin()
blogdown:::update_meta_addin()
serve_site()
stop_server()
serve_site()
hugo config
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
blogdown:::update_meta_addin()
blogdown:::new_post_addin()
stop_server()
serve_site()
stop_server()
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
build_site(build_rmd = T)
serve_site()
blogdown::build_site(build_rmd = T)
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
stop_server()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown:::new_post_addin()
a <- 1
b <- 2
sum(a + b)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
## Load frequently used packages for blog posts
library('devtools') # for session_info()
## Load knitcitations with a clean bibliography
cleanbib()
## Load frequently used packages for blog posts
library('devtools') # for session_info()
## Load knitcitations with a clean bibliography
cite_options(hyperlink = 'to.doc', citation_format = 'text', style = 'html')
## Load frequently used packages for blog posts
library('devtools') # for session_info()
## Print bibliography
bibliography(style = 'html')
## Reproducibility info
options(width = 120)
session_info()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
blogdown::build_site(build_rmd = T)
## Load frequently used packages for blog posts
library('devtools') # for session_info()
## Reproducibility info
options(width = 120)
session_info()
blogdown::build_site(build_rmd = T)
serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
knitr::opts_chunk$set(
fig.width = 7,
fig.height = 5,
fig.align = "center",
warning = FALSE,
error = FALSE,
tidy = TRUE
)
x <- c("igraph", "tidyverse", "kableExtra", "knitr", "corrplot", "qgraph")
lapply(x, library, character.only = T)
file <- "./data/astronauts.csv" #"../input/astronaut-database/astronauts.csv"
df <- read_csv(file = file)
file <- "./data/astronauts.csv" #"../input/astronaut-database/astronauts.csv"
df <- read_csv(file = file)
setwd("~/Dropbox/coding/rproj/blogdown-default")
file <- "./data/astronauts.csv"
#"../input/astronaut-database/astronauts.csv"
df <- read_csv(file = file)
file <- "./data/astronauts.csv"
#"../input/astronaut-database/astronauts.csv"
df <- read_csv(file = file)
getwd()
list.files(path = "./data")
list.files(path = "./data", full.names = T)
list.files(path = "./content/post/2021-02-24-astronauts/")
list.files(path = "./content/post/2021-02-24-astronauts/", full.names = T)
setwd("./content/post/2021-02-24-astronauts/")
file <- "../..//data/astronauts.csv"
#"../input/astronaut-database/astronauts.csv"
df <- read_csv(file = file)
file <- "../../data/astronauts.csv"
#"../input/astronaut-database/astronauts.csv"
df <- read_csv(file = file)
file <- "../../../data/astronauts.csv"
#"../input/astronaut-database/astronauts.csv"
df <- read_csv(file = file)
file <- "../../../data/astronauts.csv"
df <- read_csv(file = file)
file <- "../../../data/astronauts.csv"
df <- read_csv(file = file)
This project was based on the astronaut [dataset](https://www.kaggle.com/jessemostipak/astronaut-database) at kaggle. Credit for the dataset was given to  Georgios Karamanis. The sources were listed as NASA, Roscosmos and "fun-made" websites.
The dataset was downloaded and imported. The dataset contains all flights into space and has descriptive informaton on the flight and the basic biographical information of the astronauts on the flight.  There were `r nrow(df)` rows and `r ncol(df)` columns. The first mission was in `r min(df$year_of_mission)` and the dataset includes the missions through `r max(df$year_of_mission)`.
"EVA" is an abbreviation for "extra-vehicular-activity," and is used to describe astonaut activities outside the main capsule like space walks. `field21` is an unknown field.
# Preliminaries
## Missingness
Let's check for missingness. `r length(which(is.na(df) == T))` values are missing.  Subsetting to only the rows that contain a missing value yields the dataframe below.
```{r astro-subset-nas}
df.na <- df[!complete.cases(df), ]
df.na[, 1:5] #first five columns
df.na <- df[!complete.cases(df), ]
df.na[, 1:5] #first five columns
Also, the missing values in the variables might reveal a pattern.  The `Amelia` package contains a quick way to plot missing data.
df.na <- df[!complete.cases(df), ]
df.na[, 1:5] #first five columns
file <- "../../../data/astronauts.csv"
df <- read_csv(file = file)
df.na <- df[!complete.cases(df), ]
df.na[, 1:5] #first five columns
file <- "../../../data/astronauts.csv"
df <- read_csv(file = file)
knitr::opts_chunk$set(
fig.width = 7,
fig.height = 5,
fig.align = "center",
warning = FALSE,
error = FALSE,
tidy = TRUE
)
x <- c("igraph", "tidyverse", "kableExtra", "knitr", "corrplot", "qgraph")
lapply(x, library, character.only = T)
file <- "../../../data/astronauts.csv"
df <- read_csv(file = file)
file <- "../../../data/astronauts.csv"
df <- read_csv(file = file)
df.na <- df[!complete.cases(df), ]
df.na[, 1:5] #first five columns
Amelia::missmap(df.na,
margins = c(10, 10),
main = "Astronauts Missing Data")
rev(sort(apply(df, 2, function(x) length(unique(x)))))
my_vars <- lapply(df, class)
df.vars <- data.frame(variables = names(my_vars),
values = unlist(lapply(my_vars, "[[", 1))
)
row.names(df.vars) <- NULL
df.vars %>% dplyr::arrange(values)
str(df, give.attr = F)
df2 <- df[, c(2, 4)] #subset main df to just astronaut and number
df2 <- dplyr::distinct(df2)
print(paste(nrow(df2), "number of distinct astronauts"))
#one astronaut is included in the names column twice--it is the same person
duplicate.name <- df2$name[duplicated(df2$name)]
df2[grep(duplicate.name, df2$name), ]
#two astronauts have the same number
duplicate.number <- df2$number[duplicated(df2$number)]
df2[which(df2$number == duplicate.number), ]
df3 <- dplyr::select_if(df, is.numeric)
df3 <- dplyr::select(df3, -id, -number, -mission_number)
res <- cor(df3)
res <- round(res, 2)
library(corrplot)
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = res, col = col,
symm = TRUE,
margins = c(10, 10),
main = "Numeric Astonaut Variables")
df4 <- dplyr::select_if(df, is.numeric)
df4 <- dplyr::select(df4, hours_mission, total_hrs_sum)
df4 <- tidyr::gather(df4)
library(ggplot2)
p <- ggplot(df4, aes(value, group = key, colour = key))
p <- p + geom_boxplot()
p <- p + ggtitle("Boxplot Numeric Variables")
p
df$age <- df$year_of_mission - df$year_of_birth
df5 <-
df %>%
select(name, age, sex)
p <- ggplot(df5, aes(age))
p <- p + geom_histogram(binwidth = 1)
p <- p + facet_grid(. ~ sex)
p
df$num <- 1
df6 <-
df %>%
dplyr::filter(nationality %in% c("U.S.S.R/Russia", "U.S.")) %>%
group_by(year_of_mission, nationality) %>%
summarize(flights = sum(num))
colnames(df6)[1] <- "year"
p <- ggplot(df6, aes(year, flights, group = nationality, color = nationality))
p <- p + geom_line()
p <- p + geom_point(size = 1)
p <- p + ggtitle(paste("Annual Flights U.S. v. Russia 1961 - 2019"))
p
df7 <-
df %>%
select(name, nationality, sex, year_of_birth, total_hrs_sum) %>%
arrange(-total_hrs_sum) %>%
distinct() %>%
dplyr::slice_head(n = 10)
df7
space_race <- min(df$year_of_mission): 1969
#subset
df.1 <- dplyr::filter(df, year_of_mission %in% space_race)
#create edge list
df.2 <-
df.1 %>%
select(mission_title, name) %>%
inner_join(., select(., mission_title, name), by = "mission_title") %>%
rename(name1 = name.x, name2 = name.y) %>%
dplyr::filter(name1 != name2) %>%
arrange(mission_title) %>%
unique
#edge list dataframe
edges <- dplyr::select(df.2, name1, name2,  mission_title)
head(edges)
#nodes
nodes <- tibble(name = unique(c(edges$name1, edges$name2)))
nodes.1 <- dplyr::left_join(nodes, df.1, by = "name")
nodes.1 <- nodes.1[-which(duplicated(nodes.1$name) == TRUE), ]
#add nationality
nodes.1$nationality_col <- "blue"
nodes.1$nationality_col[grep("Russia", nodes.1$nationality)] <- "red"
#add lastname
nodes.1$last_name <- gsub(",", "", word(nodes.1$name))
#graph
g <- graph_from_data_frame(edges,
directed = FALSE,
vertices = nodes.1)
g1 <- igraph::simplify(g)
par(mar = c(1, 1, 1, 1))
set.seed(123)
plot(g1,
layout = layout_with_fr,
vertex.color = V(g1)$nationality_col,
vertex.size = V(g1)$total_number_of_missions * 1.75,
vertex.label = V(g1)$last_name,
vertex.label.dist = 1.4,
vertex.label.cex = 1.25,
asp = 0,
main = "U.S. vs. Russia Space Race"
)
par(mar = c(1, 1, 1, 1))
set.seed(123)
filename <- "./img/us_vs_russia_space_race.jpg"
jpeg(filename = filename, width = 7, height = 5, units = "in", quality = 90, type = "cairo", res = 300)
plot(g1,
layout = layout_with_fr,
vertex.color = V(g1)$nationality_col,
vertex.size = V(g1)$total_number_of_missions * 1.75,
vertex.label = V(g1)$last_name,
vertex.label.dist = 1.4,
vertex.label.cex = 1.25,
asp = 0,
main = "U.S. vs. Russia Space Race"
)
par(mar = c(1, 1, 1, 1))
set.seed(123)
filename <- "./us_vs_russia_space_race.jpg"
jpeg(filename = filename, width = 7, height = 5, units = "in", quality = 90, type = "cairo", res = 300)
plot(g1,
layout = layout_with_fr,
vertex.color = V(g1)$nationality_col,
vertex.size = V(g1)$total_number_of_missions * 1.75,
vertex.label = V(g1)$last_name,
vertex.label.dist = 1.4,
vertex.label.cex = 1.25,
asp = 0,
main = "U.S. vs. Russia Space Race"
)
dev.off()
df.2 <-
df %>%
select(mission_title, name) %>%
inner_join(., select(., mission_title, name), by = "mission_title") %>%
rename(name1 = name.x, name2 = name.y) %>%
dplyr::filter(name1 != name2) %>%
arrange(mission_title) %>%
unique
#edge list dataframe
edges <- dplyr::select(df.2, name1, name2,  mission_title)
head(edges)
#nodes
nodes <- tibble(name = unique(c(edges$name1, edges$name2)))
nodes.1 <- dplyr::left_join(nodes, df, by = "name")
nodes.1 <- nodes.1[-which(duplicated(nodes.1$name) == TRUE), ]
#add nationality as factor
nodes.1 <-
nodes.1 %>%
mutate(nationality_f = fct_lump(nationality, n = 2))
#add nationality as color
nodes.1$nationality_col <- "yellow"
nodes.1$nationality_col[grep("U\\.S\\.$", nodes.1$nationality_f)] <- "blue"
nodes.1$nationality_col[grep("Russia", nodes.1$nationality_f)] <- "red"
#graph
g <- graph_from_data_frame(edges,
directed = FALSE,
vertices = nodes.1)
g1 <- igraph::simplify(g)
#plot
par(mar = c(1, 1, 1, 1))
set.seed(123)
plot(g1,
layout = layout_with_fr,
vertex.color = V(g1)$nationality_col,
vertex.size = V(g1)$total_number_of_missions * 1.5,
vertex.label = NA,
asp = 0,
main = "All Astronauts"
)
#add legend
legend(x = "bottomleft",
legend = c("U.S.", "Russia", "Other"),
pch = 19,
col = c("blue", "red", "yellow"),
bty = "n",
title = "Nationality",
cex = 1,
pt.cex = 2)
#nodes
nodes <- tibble(name = unique(c(edges$name1, edges$name2)))
nodes.1 <- dplyr::left_join(nodes, df, by = "name")
nodes.1 <- nodes.1[-which(duplicated(nodes.1$name) == TRUE), ]
#add nationality as factor
nodes.1 <-
nodes.1 %>%
mutate(nationality_f = fct_lump(nationality, n = 2))
#add nationality as color
nodes.1$nationality_col <- "yellow"
nodes.1$nationality_col[grep("U\\.S\\.$", nodes.1$nationality_f)] <- "blue"
nodes.1$nationality_col[grep("Russia", nodes.1$nationality_f)] <- "red"
#graph
g <- graph_from_data_frame(edges,
directed = FALSE,
vertices = nodes.1)
g1 <- igraph::simplify(g)
#plot
par(mar = c(1, 1, 1, 1))
set.seed(123)
plot(g1,
layout = layout_with_fr,
vertex.color = V(g1)$nationality_col,
vertex.size = V(g1)$total_number_of_missions * 1.5,
vertex.label = NA,
asp = 0,
main = "All Astronauts"
)
#add legend
legend(x = "bottomleft",
legend = c("U.S.", "Russia", "Other"),
pch = 19,
col = c("blue", "red", "yellow"),
bty = "n",
title = "Nationality",
cex = 1,
pt.cex = 2)
blogdown::serve_site()
blogdown::build_site(build_rmd = T)
getwd()
setwd("../..")
setwd("..")
blogdown::serve_site()
