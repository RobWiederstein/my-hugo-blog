View(df)
View(df[[2]][[1]])
View(df[[2]][[1]])
View(df[[2]][[2]])
df[[2]]
df[[1]]
df[[2]]
df[["metadata"]]
df[["metadata"]]
df[[2]]
df[[3]]
View(df[[2]][[2]])
View(df[[2]][[1]])
View(df[[2]][[2]])
df[[2]][[2]]
View(df)
df %>% unnest_wider(metadata)
df[[1]]
df[1,2]
df[1]
df[[1]]
df[[1]][[1]]
df[1, 2]
df[1]
df[1][1]
df[1][[1]]
df[[1]][[1]]
df
df |> unnest_wider(metadata)
df |> unnest_wider(metadata) |> unnest_longer(films)
df |> hoist(metadata, 1)
df |> hoist(metadata, [[1]])
df |> hoist(metadata, [["species"]])
df |> hoist(metadata, "color")
df |> hoist(metadata, "color", "species")
df |> hoist(metadata, "color", "species", "films")
df |> hoist(metadata, "color", "species", list("films", 1))
df |> hoist(metadata, "color", "species", list("films", 1L))
df |> hoist(metadata, "color", "species", first_film = list("films", 1L))
df <- tibble(
x = 1:3,
y = list(NULL, 1:3, 4:5)
)
df
df |> unnest(y)
df |> unnest_wider(y)
df |> unnest_longer()
df |> unnest_longer(y)
df %>% unnest_wider(y)
df %>% unnest_wider(y, names_sep = "_")
df <- tibble(
x = 1:2,
y = list(c(a = 1, b = 2), c(a = 10, b = 11, c = 12))
)
View(df)
df %>% unnest_wider(y)
df %>% unnest_longer(y)
df <- tibble(
x = 1:2,
y = list(1:2, 3:4),
z = list(5:6, 7:8)
)
unnest_longer(df, c(y, z))
unnest_longer(unnest_longer(df, y), z)
json <- list(
list(x = 1:2, y = 1:2),
list(x = list(), y = 3:4),
list(x = 3L, y = list())
)
View(json)
df <- tibble(json = json)
View(df)
View(df[[1]][[1]])
wide <- unnest_wider(df, json)
wide
unnest_longer(wide, c(x, y))
df <- data.frame(abc = 1, xyz = "a")
df$x
df[, "xyz"]
df[, c("abc", "xyz")]
df[[1 ]]
df <- data.frame(abc = c(1,2),  xyz = c("a", "b"))
df$x
df[, "xyz"]
df[, c("abc", "xyz")]
df[[1]]
df[1]
df[1, 1]
dt <- tibble(df)
dt[[1]]
dt[1]
dt[1][1]
dt[[1]]
dt[[1]][[1]]
df <- tibble(abc = c(1,2),  xyz = c("a", "b"))
df
df$x
df[, "xyz"]
df[, c("abc", "xyz")]
df[[1]]
df[1, 1]
dt[[1]]
dt[1]
dt[1][1]
dt[1][[1]]
dt[[1]]
dt[[1]][1]
dt[[1]][[1]]
?repurrrsive
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
delivering_good_990 <- glue::glue(
"https://s3.amazonaws.com/irs-form-990/202033219349317233_public.xml",
"?_ga=2.16730738.538037686.1650110873-1696376179.1650110873"
)
# 'dg' = delivering good
xml_dg <- delivering_good_990 |> read_xml() |> as_list()
library(xml2)
delivering_good_990 <- glue::glue(
"https://s3.amazonaws.com/irs-form-990/202033219349317233_public.xml",
"?_ga=2.16730738.538037686.1650110873-1696376179.1650110873"
)
# 'dg' = delivering good
xml_dg <- delivering_good_990 |> read_xml() |> as_list()
str(xml_dg$Return$ReturnHeader)
str(xml_dg$Return$ReturnHeader$Filer$EIN)
?str()
str(
xml_dg$Return$ReturnHeader,
max.level = 1
)
str(
xml_dg$Return$ReturnHeader,
max.level = 1,
list.len = 5
)
# Executives, Officers & Board members
return <- tibble(return = xml_dg[["Return"]][["ReturnData"]][["IRS990"]])
library(tibble)
# Executives, Officers & Board members
return <- tibble(return = xml_dg[["Return"]][["ReturnData"]][["IRS990"]])
board <-
xml_return |>
enframe() |>
dplyr::filter(name == "Form990PartVIISectionAGrp") |>
unnest_wider(value) |>
unnest(cols = everything()) |>
select(-name) #|>
library(tidyr)
board <-
xml_return |>
enframe() |>
dplyr::filter(name == "Form990PartVIISectionAGrp") |>
unnest_wider(value) |>
unnest(cols = everything()) |>
select(-name) #|>
library(dplyr)
board <-
xml_return |>
enframe() |>
dplyr::filter(name == "Form990PartVIISectionAGrp") |>
unnest_wider(value) |>
unnest(cols = everything()) |>
select(-name) #|>
# Executives, Officers & Board members
xml_return <- xml_dg[["Return"]][["ReturnData"]][["IRS990"]]
board <-
xml_return |>
enframe() |>
dplyr::filter(name == "Form990PartVIISectionAGrp") |>
unnest_wider(value) |>
unnest(cols = everything()) |>
select(-name) #|>
#filter(TitleTxt == "BOARD MEMBER")
board
board <-
xml_return |>
enframe() |>
dplyr::filter(name == "Form990PartVIISectionAGrp") |>
unnest_wider(value) |>
unnest(cols = everything()) |>
select(-name) |>
unnest(cols = everything())#|>
View(board)
data <-
return |>
unnest_wider(dg) |>
select(ReturnData) |>
unnest_wider(ReturnData, names_sep = "_") |>
select(ReturnData_IRS990) |>
unnest_wider(ReturnData_IRS990, names_sep = "_") |>
select_if(~map(.x, length) == 1) |>
unnest(cols = everything())
return <- tibble(dg = xml_dg)
data <-
return |>
unnest_wider(dg) |>
select(ReturnData) |>
unnest_wider(ReturnData, names_sep = "_") |>
select(ReturnData_IRS990) |>
unnest_wider(ReturnData_IRS990, names_sep = "_") |>
select_if(~map(.x, length) == 1) |>
unnest(cols = everything())
library(purrr)
return <- tibble(dg = xml_dg)
data <-
return |>
unnest_wider(dg) |>
select(ReturnData) |>
unnest_wider(ReturnData, names_sep = "_") |>
select(ReturnData_IRS990) |>
unnest_wider(ReturnData_IRS990, names_sep = "_") |>
select_if(~map(.x, length) == 1) |>
unnest(cols = everything())
data
data
data <-
return |>
unnest_wider(dg) |>
select(ReturnData) |>
unnest_wider(ReturnData, names_sep = "_") |>
select(ReturnData_IRS990) |>
unnest_wider(ReturnData_IRS990, names_sep = "_") |>
select_if(~map(.x, length) == 1) |>
unnest(cols = everything()) |>
unnest(cols = everything())
View(data)
data
blogdown:::new_post_addin()
hg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-04-26/hidden_gems.csv")
glimpse::glimpse(hg)
?glimpse
dplyr::glimpse(hg)
blogdown::serve_site()
blogdown::serve_site()
library(blogdown)
stop_server()
serve_site
serve_site()
?dplyr::glimpse(hg)
dplyr::glimpse(hg)
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
library(textdata)
library(widyr)
library(ggplot2)
library(igraph)
library(ggraph)
hg$notebook
hg$notes
hg$notes |> unique()
review_sentiment <-
tibble(id = 1:nrow(hg), text = hg$review) |>
unnest_tokens(word, text) |>
anti_join(stop_words) |>
inner_join(get_sentiments("afinn"), by = "word") |>
group_by(id) |>
summarize(sentiment_afinn = sum(value))
hg1 <-
hg |>
mutate(title_length = str_count(title)) |>
mutate(review_length = str_count(review)) |>
mutate(id = 1:nrow(hg)) |>
mutate(special = grepl("special", hg$notes)) |>
mutate(community = grepl("Community", hg$notes)) |>
select(id, everything()) |>
left_join(review_sentiment, by = "id")
# add author frequency column
author_freq <-
hg1 |>
select(author_name) |>
group_by(author_name) |>
count() |>
rename(frequency = n)
# merge
hg1 <- left_join(hg1, author_freq, by = "author_name")
# previous kaggle notebook
hg1 <-
hg1 |>
mutate(prior_submission = frequency > 1)
library(highcharter)
?highcharter::data_to_boxplot
library(highcharter)
hg1[c("date", "author_name", "link", "sentiment_afinn", "review")] |>
DT::datatable(escape = FALSE)
hg1 |>
select(date) |>
DT::datatable(escape = FALSE)
hg1 |>
select(date, author_name) |>
DT::datatable(escape = FALSE)
hg1 |>
select(date, author_name, link) |>
DT::datatable(escape = FALSE)
review_sentiment <-
tibble(id = 1:nrow(hg), text = hg$review) |>
unnest_tokens(word, text) |>
anti_join(stop_words) |>
inner_join(get_sentiments("afinn"), by = "word") |>
group_by(id) |>
summarize(sentiment_afinn = sum(value))
hg1 <-
hg |>
mutate(title_length = str_count(title)) |>
mutate(review_length = str_count(review)) |>
mutate(id = 1:nrow(hg)) |>
mutate(special = grepl("special", hg$notes)) |>
mutate(community = grepl("Community", hg$notes)) |>
select(id, everything()) |>
left_join(review_sentiment, by = "id")
# add author frequency column
author_freq <-
hg1 |>
select(author_name) |>
group_by(author_name) |>
count() |>
rename(frequency = n)
# merge
hg1 <- left_join(hg1, author_freq, by = "author_name")
# previous kaggle notebook
hg1 <-
hg1 |>
mutate(prior_submission = frequency > 1)
hg1$link <-
paste0("<a href=\'",
hg1$notebook,
"\'>",
hg1$title,
"</a>")
hg1 |>
select(date, author_name, link) |>
DT::datatable(escape = FALSE)
hg1 |>
select(date, author_name, link, review, sentiment_afinn) |>
DT::datatable(escape = FALSE)
DT::datatable(mtcars)
blogdown::serve_site()
table <- hg1 |>
select(date, author_name, link, review, sentiment_afinn) |>
DT::datatable(escape = FALSE)
hg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-04-26/hidden_gems.csv")
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
library(textdata)
library(widyr)
library(ggplot2)
library(igraph)
library(ggraph)
library(DT)
dplyr::glimpse(hg)
review_sentiment <-
tibble(id = 1:nrow(hg), text = hg$review) |>
unnest_tokens(word, text) |>
anti_join(stop_words) |>
inner_join(get_sentiments("afinn"), by = "word") |>
group_by(id) |>
summarize(sentiment_afinn = sum(value))
hg1 <-
hg |>
mutate(title_length = str_count(title)) |>
mutate(review_length = str_count(review)) |>
mutate(id = 1:nrow(hg)) |>
mutate(special = grepl("special", hg$notes)) |>
mutate(community = grepl("Community", hg$notes)) |>
select(id, everything()) |>
left_join(review_sentiment, by = "id")
# add author frequency column
author_freq <-
hg1 |>
select(author_name) |>
group_by(author_name) |>
count() |>
rename(frequency = n)
# merge
hg1 <- left_join(hg1, author_freq, by = "author_name")
# previous kaggle notebook
hg1 <-
hg1 |>
mutate(prior_submission = frequency > 1)
hg1$link <-
paste0("<a href=\'",
hg1$notebook,
"\'>",
hg1$title,
"</a>")
hg1 |> select(title_length:link) |> glimpse()
dat <- data_to_boxplot(
hg1,
variable = sentiment_afinn,
group_var = frequency
)
library(highcharter)
dat <- data_to_boxplot(
hg1,
variable = sentiment_afinn,
group_var = frequency
)
highchart() %>%
hc_xAxis(
type = "category",
title = list(text = "submissions")
) %>%
hc_yAxis(
type = "numeric",
title = list(text = "sentiment")
) %>%
hc_add_series_list(
dat
) |>
hc_add_series(
data = hg1,
type = "scatter",
hcaes(
x = frequency,
y = sentiment_afinn,
group = frequency
),
name = "notebook",
label = "xyz",
tooltip = list(
useHTML = TRUE,
headerFormat = list("hello<br>"),
pointFormat = paste0(
"title: <a href='https://www.google.com'><b>{point.title}</b></a><br>",
"submissions: <b>{point.frequency}</b><br>",
"sentiment: <b>{point.sentiment_afinn}</b><br>"
)
)
) |>
hc_plotOptions(
scatter = list(jitter = list(x = .2, y = .2))
) |>
hc_tooltip() |>
hc_legend(enabled = F)
#add labels
table <- hg1 |>
select(date, author_name, link, review, sentiment_afinn) |>
DT::datatable(escape = FALSE)
table <- hg1 |>
select(date, author_name, link, review, sentiment_afinn) |>
DT::datatable(escape = FALSE)
table
library(highcharter)
dat <- data_to_boxplot(
hg1,
variable = sentiment_afinn,
group_var = frequency
)
highchart() %>%
hc_xAxis(
#type = "category",
title = list(text = "submissions")
) %>%
hc_yAxis(
type = "numeric",
title = list(text = "sentiment")
) %>%
hc_add_series_list(
dat
) |>
hc_add_series(
data = hg1,
type = "scatter",
hcaes(
x = frequency,
y = sentiment_afinn,
group = frequency
),
name = "notebook",
label = "xyz",
tooltip = list(
useHTML = TRUE,
headerFormat = list("hello<br>"),
pointFormat = paste0(
"title: <a href='https://www.google.com'><b>{point.title}</b></a><br>",
"submissions: <b>{point.frequency}</b><br>",
"sentiment: <b>{point.sentiment_afinn}</b><br>"
)
)
) |>
hc_plotOptions(
scatter = list(jitter = list(x = .2, y = .2))
) |>
hc_tooltip() |>
hc_legend(enabled = F)
#add labels
table(hg1$sentiment_afinn)
?table
table(hg1$sentiment_afinn, useNA == "always")
table(hg1$sentiment_afinn, useNA == "always")
table(hg1$sentiment_afinn, useNA = T)
table(hg1$sentiment_afinn, exclude = F)
hg1$sentiment_afinn |> is.na()
hg1$sentiment_afinn |> is.na() |> sum()
get_sentiments("afinn")
get_sentiments("afinn")
?dplyr::sample_n
get_sentiments("afinn") |> slice_sample(n = 10)
get_sentiments("afinn") |> filter(value = 5) |> slice_sample(n = 10)
get_sentiments("afinn") |> filter(value == 5) |> slice_sample(n = 10)
get_sentiments("afinn") |> filter(value == 5)
get_sentiments("afinn") |> filter(value == -5) |> slice_head(n = 10)
get_sentiments("afinn") |> filter(value == -4) |> slice_head(n = 10)
get_sentiments("afinn")
get_sentiments("afinn") |> filter(value == -5) |> slice_head(n = 10)
citation("DT")
