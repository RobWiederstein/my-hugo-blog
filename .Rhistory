stringr::str_trim(side = "both") %>%
stringr::str_split(" ") %>%
unlist() %>%
as.numeric()
dec <- dec[1] + (dec[2]/60)
dec
}
#degree & decimal minutes
deg <- c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'")
#degree & decimal minutes
deg <- c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'")
deg2dec <- function(deg){
dec <-
deg %>%
gsub("N|°|'|W", "", .) %>%
stringr::str_trim(side = "both") %>%
stringr::str_split(" ") %>%
unlist() %>%
as.numeric()
dec <- dec[1] + (dec[2]/60)
dec
}
deg2dec()
deg2dec(deg)
sapply(deg, deg2dec)
unlist(lapply(deg, deg2dec))
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- as_tibble(data.table::fread(input = input))
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
deg2dec <- function(deg){
dec <-
deg %>%
gsub("N|°|'|W", "", .) %>%
stringr::str_trim(side = "both") %>%
stringr::str_split(" ") %>%
unlist() %>%
as.numeric()
dec <- dec[1] + (dec[2]/60)
dec
}
df.3$lat <- sapply(df.3$latitude, deg2dec)
warnings()
sapply(df.3$latitude[1:50], deg2dec)
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
deg2dec <- function(deg){
dec <-
deg %>%
gsub("N|°|'|W", "", .) %>%
stringr::str_trim(side = "both") %>%
stringr::str_split(" ") %>%
unlist() %>%
as.numeric()
dec <- dec[1] + (dec[2]/60)
dec
}
unlist(lapply(deg, deg2dec))
unlist(lapply(deg$lat, deg2dec))
df.3$lat <- unlist(lapply(df.3$latitude[1:50], deg2dec))
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- as_tibble(data.table::fread(input = input))
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
deg2dec <- function(deg){
dec <-
deg %>%
gsub("N|°|'|W", "", .) %>%
stringr::str_trim(side = "both") %>%
stringr::str_split(" ") %>%
unlist() %>%
as.numeric()
dec <- dec[1] + (dec[2]/60)
dec
}
df.3$lat <- unlist(lapply(df.3$latitude[1:50], deg2dec))
df.3$lat <- unlist(lapply(df.3$latitude, deg2dec))
unlist(lapply(df.3$latitude, deg2dec))
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
deg2dec <- function(deg){
dec <-
deg %>%
gsub("N|°|'|W", "", .) %>%
stringr::str_trim(side = "both") %>%
stringr::str_split(" ") %>%
unlist() %>%
as.numeric()
dec <- dec[1] + (dec[2]/60)
dec
}
deg
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- as_tibble(data.table::fread(input = input))
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
df.3$latitude[1:5]
str(df.3)
df.3$latitude
deg2dec(df.3$latitude[1])
df.3$latitude[1]
deg2dec("N 46° 52.463'")
str(df.3)
type(df.3)
df.3$lat <- unlist(sapply(df.3$latitude, deg2dec))
df.3$lat <- unlist(sapply(as_array(df.3$latitude), deg2dec))
df.3$lat <- unlist(sapply(as.array(df.3$latitude), deg2dec))
setwd("..")
setwd("./shipwrecks_wisconsin/")
list.files()
file.edit("./build-leaflet-map.R")
file.edit("./convert-deg-to-decimal.R")
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
angle2dec <- function(angle) {
angle <- as.character(angle)
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60 + y[3]/3600
})
return(x)
}
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
lappy(my.libraries, library, character.only = T)
lapply(my.libraries, library, character.only = T)
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
angle2dec <- function(angle) {
angle <- as.character(angle)
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60 + y[3]/3600
})
return(x)
}
angle2dec(deg)
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- gsub("N|W|°|'", "", angle)
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(deg)
angle <- as.character("N 46° 52.463'")
angle <- gsub("N|W|°|'", "", angle)
angle <- as.character("N 46° 52.463'")
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(deg)
apply(deg, angle2dec)
#degree & decimal minutes
deg <-c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'")
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
apply(deg, angle2dec)
angle2dec(deg)
apply(deg, angle2dec)
sapply(deg, angle2dec)
lapply(deg, angle2dec)
unlist(lapply(deg, angle2dec))
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- as_tibble(data.table::fread(input = input))
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(df.3$latitude)
angle2dec(df.3$latitude[1])
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- data.table::fread(input = input)
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(df.3$latitude[1])
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- data.table::fread(input = input)
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
Amelia::missmap(df.3)
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(df.3$latitude[1])
df.3$latitude[1]
lapply(df.3$latitude, angle2dec)
df.3$latitude[1:3]
angle2dec("N 45° 17.120'")
angle2dec(c("N 45° 17.120'", "N 45° 17.120'"))
angle2dec(c("N 45° 17.120'", "N 46° 52.463'"))
angle2dec(df.3$latitude)
colnames(df.3)
apply(df.3[, c(14, 15)], 2L, angle2dec)
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- read.csv(file = input)
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(df.3$latitude)
apply(df.3[, c(14, 15)], 2L, angle2dec)
#degree & decimal minutes
deg <-c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'")
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(deg)
unlist(lapply(deg, angle2dec))
#degree & decimal minutes
deg <-as_tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
#degree & decimal minutes
deg <-as_tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
#degree & decimal minutes
deg <-tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(deg)
unlist(lapply(deg, angle2dec))
angle2dec(deg)
unlist(lapply(deg, angle2dec))
angle2dec(deg)
unlist(lapply(deg, angle2dec))
angle2dec(deg)
sapply(deg, angle2dec)
apply(deg, 2, angle2dec)
apply(deg, 2L, angle2dec)
apply(deg, 2L, angle2dec)
unlist(lapply(deg, angle2dec))
lapply(deg, angle2dec)
str(deg)
#degree & decimal minutes
deg <-data.frame(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
apply(deg, 2L, angle2dec)
lapply(deg, angle2dec)
#degree & decimal minutes
deg <-data.table::fread(input = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
#degree & decimal minutes
deg <- data.table(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
#degree & decimal minutes
deg <- data.frame(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44° 50.079'"))
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
apply(deg, 2L, angle2dec)
lapply(deg, angle2dec)
#degree & decimal minutes
deg <- tibble(lat = c("N 46° 52.463'", "N 45° 17.120'", "N 44°50.079'"))
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, strsplit(angle, split=' '))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
apply(deg, 2L, angle2dec)
df.3$lat <- str_trim(gsub("N|W|°|'", "", df.3$latitutde), side = "both")
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- read.csv(file = input)
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
df.3$lat <- str_trim(gsub("N|W|°|'", "", df.3$latitutde), side = "both")
df.3$lat <- gsub("N|W|°|'", "", df.3$latitutde)
gsub("N|W|°|'", "", df.3$latitutde)
df.3$lat <- gsub("N|W|°|'", "", df.3$latitude)
df.3$lat <- stringr::str_trim(gsub("N|W|°|'", "", df.3$latitude), side = "both")
df.3$deg <- sapply(str_split(df.3$lat, pattern = " "), "[[", 2)
a  <- str_split(df.3$lat, pattern = " ")
a  <- stringr::str_split(df.3$lat, pattern = " ")
a[[1]]
a  <- strsplit(df.3$lat, split = " ")
df.3$lat[1:5]
?strsplit
a  <- strsplit("a b", split = " ")
a  <- strsplit("46 52.463", split = " ")
a  <- strsplit(df.3$lat, split = " ")
a  <- stringr::str_split(df.3$lat, split = " ")
a  <- stringr::str_split(df.3$lat, pattern = " ")
as.numeric("01.1")
as.numeric("01.10")
a  <- stringr::str_split(df.3$lat, pattern = "[[:space:]]")
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, stringr::str_split(angle, pattern = "[[:space:]]"))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
angle2dec(df.3$latitude)
df.3$lat <- sapply(df.3$latitude, angle2dec)
df.3$lat <- unlist(lapply(df.3$latitude, angle2dec))
df.3$lat
which(is.na(df.3$lat) == T)
df.3$lon <- unlist(lapply(df.3$longitude, angle2dec))
df.3$lng <- unlist(lapply(df.3$longitude, angle2dec))
m <- leaflet() %>%
addTiles()%>%
setView(lat = 45, lng = -88, zoom = 7) %>%
addCircleMarkers(lng = df.3$lng,
lat = df$lat,
)
library(leaflet)
m <- leaflet() %>%
addTiles()%>%
setView(lat = 45, lng = -88, zoom = 7) %>%
addCircleMarkers(lng = df.3$lng,
lat = df$lat,
)
m
m <- leaflet() %>%
addTiles()%>%
setView(lat = 45, lng = -88, zoom = 7) %>%
addCircleMarkers(lng = df.3$lng,
lat = df.3$lat,
)
m
df.3$lng <- df.3$lng * -1
m <- leaflet() %>%
addTiles()%>%
setView(lat = 45, lng = -88, zoom = 7) %>%
addCircleMarkers(lng = df.3$lng,
lat = df.3$lat,
)
m
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
input <- "~/Dropbox/public/datasets/2021-03-12-wi-historical-society-shipwrecks-full.csv"
df.1 <- tibble(data.table::fread(input = input))
colnames(df.1) <- tolower(gsub(" ", "_", colnames(df.1)))
#omit nas in latitude
df.2 <- df.1[which(is.na(df.1$latitude) != T ), ]
#omit nas in longitude
df.3 <- df.2[which(is.na(df.2$longitude) != T ), ]
Amelia::missmap(df.3)
angle2dec <- function(angle) {
angle <- as.character(angle)
angle <- str_trim(gsub("N|W|°|'", "", angle), side = "both")
x <- do.call(rbind, stringr::str_split(angle, pattern = "[[:space:]]"))
x <- apply(x, 1L, function(y) {
y <- as.numeric(y)
y[1] + y[2]/60
})
return(x)
}
# 2 NAs
df.3$lat <- unlist(lapply(df.3$latitude, angle2dec))
# 5 NAs
df.3$lng <- unlist(lapply(df.3$longitude, angle2dec))
df.3$lng <- df.3$lng * -1
table(df.3$propulsion_type)
sort(table(df.3$propulsion_type))
m <- leaflet() %>%
addTiles()%>%
setView(lat = 45, lng = -88, zoom = 7) %>%
addCircleMarkers(lng = df.3$lng,
lat = df.3$lat,
popup = paste("Name: ", df.3$names)
)
m
m <- leaflet() %>%
addTiles()%>%
setView(lat = 45, lng = -88, zoom = 7) %>%
addCircleMarkers(lng = df.3$lng,
lat = df.3$lat,
popup = paste("Name: ", df.3$names,  <"br>",
"Year built: ", df.3$year_built)
)
m
m <- leaflet() %>%
addTiles()%>%
setView(lat = 45, lng = -88, zoom = 7) %>%
addCircleMarkers(lng = df.3$lng,
lat = df.3$lat,
popup = paste("Name: ", df.3$names,  "<br>",
"Year built: ", df.3$year_built)
)
m
table(df.3$hull_material)
df.3$length
plot(df.3$length)
plot(sort(df.3$length))
