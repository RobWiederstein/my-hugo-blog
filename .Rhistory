list.files(path = "./data_tidy", full.names = T)
path = "./data_tidy/2021-05-11-aba-attrition-RATE-by-school.csv"
df <- readxl::read_excel(path = path)
file <-  "./data_tidy/2021-05-11-aba-attrition-RATE-by-school.csv"
df <-  data.table::fread(file = file)
path = "./data_pure/2020_First_Year_Class.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
keep.cols <- c("schoolname",
"acceptancerate",
"all50lsat",
"all50gpa"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- "school"
path <- "./data_pure/2020_Faculty_Resources.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df) <- gsub(" ", "", colnames(df))
colnames(df)[1] <- "schoolname"
keep.cols <- c("schoolname",
"total",
"totallibrarians",
"totaladministrators"
)
df <- df %>% select(keep.cols)
path <- "./data_pure/2020_Faculty_Resources.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df) <- gsub(" ", "", colnames(df))
colnames(df)[1] <- "school"
keep.cols <- c("school",
"total",
"totallibrarians",
"totaladministrators"
)
df <- df %>% select(keep.cols)
source('~/Dropbox/coding/rproj/aba-attrition/R/build-consolidated-aba-db.R')
library(dplyr)
# attrition ====
attrition_2020 <- function(){
file <-  "./data_tidy/2021-05-11-aba-attrition-RATE-by-school.csv"
df <-  data.table::fread(file = file)
df
}
# class profile ====
class_2020 <- function(){
path = "./data_pure/2020_First_Year_Class.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
keep.cols <- c("schoolname",
"acceptancerate",
"all50lsat",
"all50gpa"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- "school"
df
}
# curricular offerings ====
courses_2020 <- function(){
path <- "./data_pure/2020_Curricular_Offerings.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df)[1] <- "schoolname"
keep.cols <- c("schoolname",
"firstyearsectionsize",
"numberofcoursetitles",
"under25",
"25-49",
"50-74",
"75-99",
"100+",
"clincicsum",
"fieldplacementsum",
"simulationsum",
"seminarcount",
"cocurricularcount"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- 'school'
df
}
# enrollment ====
enrollment_2020 <- function(){
path <- "./data_pure/2020_JD_Enrollment_and_Ethnicity.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df)[1] <- "schoolname"
colnames(df) <- gsub(" ", "", colnames(df))
keep.cols <- c("schoolname",
"totalgrandtotal",
"totaldegreesawarded"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- "school"
df
}
# faculty resources ====
faculty_2020 <- function(){
path <- "./data_pure/2020_Faculty_Resources.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df) <- gsub(" ", "", colnames(df))
colnames(df)[1] <- "school"
keep.cols <- c("school",
"total",
"totallibrarians",
"totaladministrators"
)
df <- df %>% select(keep.cols)
df
}
# combine datasets ====
library(purrr)
df <- list(attrition_2020(),
class_2020(),
courses_2020(),
enrollment_2020(),
faculty_2020()) %>%
reduce(left_join, by = "school")
View(df)
path <- "./data_pure/2020_JD_Enrollment_and_Ethnicity.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df)[1] <- "schoolname"
colnames(df) <- gsub(" ", "", colnames(df))
keep.cols <- c("schoolname",
"totaldegreesawarded"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- "school"
df
path <- "./data_pure/2020_Faculty_Resources.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df) <- gsub(" ", "", colnames(df))
colnames(df)[1] <- "school"
keep.cols <- c("school",
"total",
"totallibrarians",
"totaladministrators"
)
df <- df %>% select(keep.cols)
df
library(dplyr)
# attrition ====
attrition_2020 <- function(){
file <-  "./data_tidy/2021-05-11-aba-attrition-RATE-by-school.csv"
df <-  data.table::fread(file = file)
df
}
# class profile ====
class_2020 <- function(){
path = "./data_pure/2020_First_Year_Class.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
keep.cols <- c("schoolname",
"acceptancerate",
"all50lsat",
"all50gpa"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- "school"
df
}
# curricular offerings ====
courses_2020 <- function(){
path <- "./data_pure/2020_Curricular_Offerings.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df)[1] <- "schoolname"
keep.cols <- c("schoolname",
"firstyearsectionsize",
"numberofcoursetitles",
"under25",
"25-49",
"50-74",
"75-99",
"100+",
"clincicsum",
"fieldplacementsum",
"simulationsum",
"seminarcount",
"cocurricularcount"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- 'school'
df
}
# enrollment ====
enrollment_2020 <- function(){
path <- "./data_pure/2020_JD_Enrollment_and_Ethnicity.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df)[1] <- "schoolname"
colnames(df) <- gsub(" ", "", colnames(df))
keep.cols <- c("schoolname",
"totaldegreesawarded"
)
df <- df %>% select(keep.cols)
colnames(df)[1] <- "school"
df
}
# faculty resources ====
faculty_2020 <- function(){
path <- "./data_pure/2020_Faculty_Resources.xlsx"
df <- readxl::read_excel(path = path)
colnames(df) <- tolower(colnames(df))
colnames(df) <- gsub(" ", "", colnames(df))
colnames(df)[1] <- "school"
keep.cols <- c("school",
"total",
"totallibrarians",
"totaladministrators"
)
colnames(df)[2] <- "totalfaculty"
df <- df %>% select(keep.cols)
df
}
# combine datasets ====
library(purrr)
df <- list(attrition_2020(),
class_2020(),
courses_2020(),
enrollment_2020(),
faculty_2020()) %>%
reduce(left_join, by = "school")
list.files(path = "..")
dir.create("../tutorial_pca
)
dir.create("../tutorial_pca")
setwd("../tutorial_pca")
file.create("./pca.R")
file.edit("./pca.R")
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
data(mtcars)
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
mtcars <- mtcars[,c(1:7,10,11)]
mtcars.pca <- prcomp(mtcars, center = TRUE,scale. = TRUE)
summary(mtcars.pca)
str(mtcars.pca)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
ggbiplot(mtcars.pca)
ggbiplot(mtcars.pca, labels=rownames(mtcars))
mtcars.country <- c(rep("Japan", 3), rep("US",4), rep("Europe", 7),rep("US",3)
mtcars.country <- c(rep("Japan", 3), rep("US",4), rep("Europe", 7),rep("US",3)
mtcars.country <- c(rep("Japan", 3), rep("US",4), rep("Europe", 7),rep("US",3))
ggbiplot(mtcars.pca,ellipse=TRUE, labels=rownames(mtcars), groups=mtcars.country)
data(mtcars)
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
str(mtcars.pca)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(ggbiplot)
ggbiplot(mtcars.pca)
ggbiplot(mtcars.pca, labels=rownames(mtcars))
mtcars.country <- c(rep("Japan", 3), rep("US",4), rep("Europe", 7),rep("US",3))
ggbiplot(mtcars.pca,ellipse=TRUE, labels=rownames(mtcars), groups=mtcars.country)
mtcars.country <- c(rep("Japan", 3), rep("US",4), rep("Europe", 7),rep("US",3), "Europe", rep("Japan", 3), rep("US",4), rep("Europe", 3), "US", rep("Europe", 3))
ggbiplot(mtcars.pca,ellipse=TRUE,  labels=rownames(mtcars), groups=mtcars.country)
ggbiplot(mtcars.pca,ellipse=TRUE,choices=c(3,4),   labels=rownames(mtcars), groups=mtcars.country)
#http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/118-principal-component-analysis-in-r-prcomp-vs-princomp/
#prcomp preferred
?prcomp
prcomp(mtcars)
# Package for PCA visualization
install.packages("factoextra")
data(factoextra::decathlon2)
library(factoextra)
data(factoextra::decathlon2)
data(decathlon2)
data(decathlon2)
head(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6])
fviz_eig(res.pca)
# Compute PCA
res.pca <- prcomp(decathlon2.active, scale = TRUE)
fviz_eig(res.pca)
fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
# Access to the PCA results
# Eigenvalues
eig.val <- get_eigenvalue(res.pca)
eig.val
# Results for Variables
res.var <- get_pca_var(res.pca)
res.var$coord          # Coordinates
res.var$contrib        # Contributions to the PCs
res.var$cos2           # Quality of representation
getwd()
setwd("..")
list.files()
list.files(full.names=T)
list.files(full.names=T, recurive  = T)
list.files(full.names=T, recursive  = T)
setwd("./aba-attrition/")
list.files(full.names = T)
# step 1 ====
a <- 1
# step 1 ====
df.1 <- 1
rm(list = ls())
# step 1 ====
df.1 <- 1
a <- 1
rm(list = a
rm(list = a)
# step 1 ====
df.1 <- 1
a <- 1
rm(list = a)
rm(a)
# step 2 ====
df.2 <- 2
# step 3 ====
df.3 <- 3
rm(c)
# step 1 ====
df.1 <- 1
a <- 1
rm(a)
# step 2 ====
df.2 <- 2
b <- 1
rm(b)
# step 3 ====
df.3 <- 3
c <- 1
rm(c)
source('~/Dropbox/coding/rproj/aba-attrition/R/build-consolidated-aba-db.R')
View(df)
sapply(df, class)
dim(df)
Amelia::missmap(df)
mean(c(1, NA))
df.2 <- df %>% tidyr::drop_na()
Amelia::missmap(df.2)
mtcars
fit.lm <- lm(mpg ~ hp, data = mtcars)
fit.lm <- lm(mpg ~ hp, data = mtcars)
summary(fit.lm)
df <- mtcars
View(df)
fit.lm <- lm(mpg ~ hp + cyl, data = mtcars)
summary(fit.lm)
setwd("../blogdown")
setwd("../blogdown-default/")
blogdown::serve_site()
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'dplyr',
'kableExtra',
'magrittr',
'plotly
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'dplyr',
'kableExtra',
'magrittr',
'plotly'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
## Do not break chunk line
## Do not use spaces or periods "." or underscores "_"
## set options for knitr
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=T,
comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
#enrollment
input <- "~/Dropbox/public/datasets/2021-05-11-aba-enrollment-by-school.csv"
df.e <- data.table::fread(input = input)
#attrition
input <- "~/Dropbox/public/datasets/2021-05-11-aba-attrition-by-school.csv"
df.a <- data.table::fread(input = input)
#class profile
input <- "~/Dropbox/public/datasets/2021-05-11-aba-class-profile-by-school.csv"
df.p <- data.table::fread(input = input)
level.a <-
df.a %>%
group_by(level) %>%
summarize(attrite = sum(value))
level.e <-
df.e %>%
group_by(level) %>%
summarize(enroll = sum(value))
level <- left_join(level.a, level.e, by = "level")
rlang::last_error()
level.a <-
df.a %>%
group_by(level) %>%
summarize(attrite = sum(value))
level.e <-
df.e %>%
group_by(level) %>%
summarize(enroll = sum(value))
level <- left_join(level.a, level.e, by = "level")
level.a <-
df.a %>%
group_by(level) %>%
summarize(attrite = sum(value))
level.a <-
df.a %>%
group_by(level) %>%
summarize(attrite = sum(value))
level.a <-
df.a %>%
mutate(level = factor(level)) %>%
group_by(level) %>%
summarize(attrite = sum(value))
level.a <-
df.a %>%
group_by(level) %>%
summarize(attrite = sum(value))
table(df.a$level)
level.a <-
df.a %>%
group_by(factor(level)) %>%
summarize(attrite = sum(value))
rm(level.a)
level.a <-
df.a %>%
group_by(factor(level)) %>%
summarize(attrite = sum(value))
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'dplyr',
'kableExtra',
'magrittr',
'plotly'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
level.a <-
df.a %>%
group_by(factor(level)) %>%
summarize(attrite = sum(value))
level.a <-
df.a %>%
dplyr::group_by(factor(level)) %>%
summarize(attrite = sum(value))
#enrollment
input <- "~/Dropbox/public/datasets/2021-05-11-aba-enrollment-by-school.csv"
df.e <- data.table::fread(input = input)
#attrition
input <- "~/Dropbox/public/datasets/2021-05-11-aba-attrition-by-school.csv"
df.a <- data.table::fread(input = input)
#class profile
input <- "~/Dropbox/public/datasets/2021-05-11-aba-class-profile-by-school.csv"
df.p <- data.table::fread(input = input)
level.a <-
df.a %>%
dplyr::group_by(factor(level)) %>%
summarize(attrite = sum(value))
level.e <-
df.e %>%
group_by(level) %>%
summarize(enroll = sum(value))
level <- left_join(level.a, level.e, by = "level")
