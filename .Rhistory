library(citr)
detach("package:citr", unload = TRUE)
uninstall(citr)
remove.packages("citr")
devtools::install_github("crsh/citr")
df <- mtcars
df %>% group_by(cyl) %>% summarize(min = min(mpg))
df %>% group_by(cyl) %>% summarize(min = min(mpg))
?slice
df %>% group_by(cyl) %>% slice(1L)
df %>% group_by(cyl) %>% slice(5L)
df.1 <- df %>% group_by(cyl) %>% slice(5L)
View(df.1)
df.1 <- df %>% group_by(cyl) %>% slice(mpg, 5L)
df.1 <- df %>% group_by(cyl) %>% slice(mpg, n = 5)
df %>% group_by(cyl) %>% slice(mpg, n = 5)
df.1 <- df %>% group_by(cyl) %>% arrange(mpg)
View(df.1)
df.1 <- df %>% group_by(cyl) %>% mutate(rank = rank(mpg))
View(df.1)
?rank
View(df.1)
df.1 <- df %>%
group_by(cyl) %>%
mutate(rank = rank(mpg, ties.method = "first")) %>%
dplyr::filter(rank == 5)
View(df.1)
View(df.1)
a.key <- data.frame(number = c(1, ncol(mtcars)),
key = colnames(mtcars))
ncol(mtcars)
colnames(mtcars)
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars))
t(a.key)
a.key <- t(a.key)
a.key <- data.frame(t(a.key))
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars))
a.key <- data.frame(t(a.key))
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars),
stringsAsFactors = F)
a.key <- data.frame(t(a.key))
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars),
stringsAsFactors = F)
View(a.key)
a.key
key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars),
stringsAsFactors = F)
key
print(key)
?print
require(stats)
ts(1:20)
for(i in 1:3) print(1:i)
t1 <- round(abs(rt(200, df = 1.8)))
t2 <- round(abs(rt(200, df = 1.4)))
table(t1, t2) # simple
print(table(t1, t2), zero.print = ".")
key
df %>% arrange(cyl, mpg)
df %>% group_by(cyl) %>% slice(mpg, n = 5)
df
str(df)
df %>% group_by(cyl) %>% slice(n = 5)
df %>% group_by(cyl, mpg) %>% slice(n = 5)
df %>% group_by(cyl) %>% slice(n = 5)
View(df)
df %>% group_by(cyl) %>% arrange(mpg) %>% slice(n = 5) #5th one
df %>%  arrange(cyl, mpg) %>% group_by(cyl) %>% slice(n = 5) #5th one
setwd("./blogdown-even")
blogdown::build_site()
blogdown::serve_site()
library(magrittr)
library(htmlwidgets)
library(leaflet)
library(widgetframe)
library(leaflet)
library(widgetframe)
library(magrittr)
l % addTiles() %>% setView(0,0,1)
library(htmlwidgets)
library(leaflet)
library(widgetframe)
library(leaflet)
library(widgetframe)
library(magrittr)
l %>% addTiles() %>% setView(0,0,1)
?leaflet
library(leaflet)
library(widgetframe)
library(magrittr)
m <- leaflet() %>% addTiles()
frameWidget(m)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidget", "magrittr")
lapply(my.pkgs, library, character.only = T)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidgets", "magrittr")
lapply(my.pkgs, library, character.only = T)
?library
lapply(my.pkgs, library, character.only = T, quietly = T)
lapply(my.pkgs, library, character.only = T, quietly = T, verbose = F)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidgets", "magrittr")
lapply(my.pkgs, function(x) suppressPackageStartupMessages(library(x, character.only = T)))
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
setwd("..")
blogdown::new_site
blogdown::install_hugo
?blogdown::`blogdown-package`
blogdown::new_post
function (title, kind = "", open = interactive(), author = getOption("blogdown.author"),
categories = NULL, tags = NULL, date = Sys.Date(), file = NULL,
slug = NULL, title_case = getOption("blogdown.title_case"),
subdir = getOption("blogdown.subdir", "post"), ext = getOption("blogdown.ext",
".md"))
{
if (is.null(file))
file = post_filename(title, subdir, ext, date)
file = trim_ws(file)
if (missing(kind))
kind = default_kind(file)
if (is.null(slug) && auto_slug())
slug = post_slug(file)
slug = trim_ws(slug)
if (generator() == "hugo")
file = new_content(file, kind, FALSE)
else {
writeLines(c("---", "", "---"), file)
}
if (isTRUE(title_case))
title_case = tools::toTitleCase
if (is.function(title_case))
title = title_case(title)
if (get_option("blogdown.warn.future", TRUE)) {
if (isTRUE(tryCatch(date > Sys.Date(), error = function(e) FALSE)))
warning("The date of the post is in the future: ",
date, ". See ", "https://github.com/rstudio/blogdown/issues/377 for consequences, ",
"and see https://alison.rbind.io/post/2019-03-04-hugo-troubleshooting/#dates ",
"for a workaround by distinguishing date and publishDate in YAML header. ",
"To turn off this warning, set options(blogdown.warn.future = FALSE).")
}
do.call(modify_yaml, c(list(file, title = title, author = author,
date = format(date), slug = slug, categories = as.list(categories),
tags = as.list(tags)), if (!file.exists("archetypes/default.md")) list(draft = NULL)))
open_file(file, open)
file
}
x <- function (title, kind = "", open = interactive(), author = getOption("blogdown.author"),
categories = NULL, tags = NULL, date = Sys.Date(), file = NULL,
slug = NULL, title_case = getOption("blogdown.title_case"),
subdir = getOption("blogdown.subdir", "post"), ext = getOption("blogdown.ext",
".md"))
{
if (is.null(file))
file = post_filename(title, subdir, ext, date)
file = trim_ws(file)
if (missing(kind))
kind = default_kind(file)
if (is.null(slug) && auto_slug())
slug = post_slug(file)
slug = trim_ws(slug)
if (generator() == "hugo")
file = new_content(file, kind, FALSE)
else {
writeLines(c("---", "", "---"), file)
}
if (isTRUE(title_case))
title_case = tools::toTitleCase
if (is.function(title_case))
title = title_case(title)
if (get_option("blogdown.warn.future", TRUE)) {
if (isTRUE(tryCatch(date > Sys.Date(), error = function(e) FALSE)))
warning("The date of the post is in the future: ",
date, ". See ", "https://github.com/rstudio/blogdown/issues/377 for consequences, ",
"and see https://alison.rbind.io/post/2019-03-04-hugo-troubleshooting/#dates ",
"for a workaround by distinguishing date and publishDate in YAML header. ",
"To turn off this warning, set options(blogdown.warn.future = FALSE).")
}
do.call(modify_yaml, c(list(file, title = title, author = author,
date = format(date), slug = slug, categories = as.list(categories),
tags = as.list(tags)), if (!file.exists("archetypes/default.md")) list(draft = NULL)))
open_file(file, open)
file
}
args(x)
?sf::aggregate
vignette(package = "sf")
vignette("sf1", package = "sf")
nc <- st_read(system.file("shape/nc.shp", package="sf"))
library(sf)
nc <- st_read(system.file("shape/nc.shp", package="sf"))
plot(nc)
View(nc)
setwd("./blogdown-default/")
serve_site()
blogdown::serve_site()
library(babynames)
install.packages("babynames")
library(babynames)
?babynames
library(babynames)
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'dplyr',
'magrittr',
'kableExtra',
'purrr'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
## Do not break chunk line
## Do not use spaces or periods "." or underscores "_"
## set options for knitr
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=F,
comment='',
cache=T,
dev='svg',
echo=T
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
data(mtcars)
#load library
library(magrittr)
# More common way to assign
x <- 10 %>% divide_by(2)
print(x)
# Less common
env <- environment()
"x" %>% assign(5, envir = env) %>% print
# As described above
10 %>% divide_by(5)
# Note the 'NULL'
rnorm(100) %>%
matrix(ncol = 2) %>%
plot() %>%
str()
rnorm(100) %>%
matrix(ncol = 2) %T>%
plot() %>%
str()
car_data <-
mtcars %>%
subset(hp > 100) %>%
aggregate(. ~ cyl, data = ., FUN = . %>% mean %>% round(2)) %>%
transform(kpl = mpg %>% multiply_by(0.4251)) %>%
print
# Unary functions
f <- . %>% head(3)
chickwts %>% f(.)
.345 %>% multiply_by(100) %>% round(2) %>% paste0("%")
# magrittr vignette
car_data <-
mtcars %>%
subset(hp > 100) %>%
aggregate(. ~ cyl, data = ., FUN = . %>% mean %>% round(2)) %>%
transform(kpl = mpg %>% multiply_by(0.4251)) %>%
print
mtcars %>%
tibble(.) %>%
#https://stackoverflow.com/questions/22353633/filter-for-complete-cases-in-data-frame-using-dplyr-case-wise-deletion
tidyr::drop_na() %>%
mutate(type = rownames(mtcars)) %>%
filter(!grepl('^A|L', type)) %>%
filter(am == 0) %>%
select(cyl, mpg) %>%
group_by(cyl) %>%
summarize(avg_mpg = mpg %>% mean() %>% round(0)) %>%
arrange(-cyl) %>%
set_colnames(c("cylinder", "avg_mpg"))
starwars %>% filter(skin_color == "light", eye_color == "brown")
library(kableExtra)
starwars %>%
select(name, height, mass, birth_year, sex, species, homeworld) %>%
filter(species == "Droid") %>%
arrange(desc(height)) %>%
slice_head(n = 4) %>%
kbl()
library(babynames)
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
x <- 1
y <- T
x %>%
add(1) %>%
{if(y) add(.,1) else .}
library(purrr)
1:10 %>%
when(
sum(.) <=   x ~ sum(.),
sum(.) <= 2*x ~ sum(.)/2,
~ 0,
x = 60
)
# system & package info
options(width = 120)
session_info()
library(babynames)
babynames %>%
filter(name %>% substr(1, 3) %>% equals("Ste")) %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
qplot(year, total, color = sex, data = ., geom = "line") %>%
add(ggtitle('Names starting with "Ste"')) %>%
print
