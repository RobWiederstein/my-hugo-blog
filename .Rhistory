comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
input <- "~/Dropbox/public/datasets/2021-06-05-us_lynchings.csv"
df.0 <- data.table::fread(input = input)
library(leaflet)
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df) <- tolower(colnames(df))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.1 <-
df %>%
select(all_of(my.cols))
m <-    leaflet(df.1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.1$lon),
lat1 = min(df.1$lat),
lng2 = min(df.1$lon),
lat2 = max(df.1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.1$date, "<br>",
"Victim:", df.1$victim, "<br>",
"Race:", df.1$race, "<br>",
"Gender:", df.1$gender),
clusterOptions = markerClusterOptions()
)
framewidget(m)
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'treemap',
'leaflet',
'widgetframe',
'htmlwidgets'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
## Do not break chunk line
## Do not use spaces or periods "." or underscores "_"
## set options for knitr
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=T,
comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
input <- "~/Dropbox/public/datasets/2021-06-05-us_lynchings.csv"
df.0 <- data.table::fread(input = input)
library(leaflet)
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df) <- tolower(colnames(df))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.1 <-
df %>%
select(all_of(my.cols))
m <-    leaflet(df.1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.1$lon),
lat1 = min(df.1$lat),
lng2 = min(df.1$lon),
lat2 = max(df.1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.1$date, "<br>",
"Victim:", df.1$victim, "<br>",
"Race:", df.1$race, "<br>",
"Gender:", df.1$gender),
clusterOptions = markerClusterOptions()
)
frameWidget(m)
df.0 %>%
group_by(dataset, year = lubridate::floor_date(date, "year")) %>%
tally(name = "deaths") %>%
ggplot(aes(year, deaths, group = dataset, color = dataset)) +
geom_line() +
theme_minimal() +
labs(title = "Annual U.S. Lynchings by Dataset",
subtitle = "1882 to 1936",
caption = "Source: Project HAL & Seguin")
df.0 %>%
group_by(year = lubridate::floor_date(date, "year")) %>%
tally(name = "deaths") %>%
ggplot(aes(year, deaths)) +
geom_line() +
theme_minimal() +
labs(title = "Total Annual U.S. Lynchings",
subtitle = "1882 to 1936",
caption = "Source: Project HAL & Seguin"
)
df.3 <-
df.0 %>%
group_by(state, year = lubridate::floor_date(date, "year")) %>%
tally(name = "deaths")
df.3$state <- factor(df.3$state,
levels = c("MS", "GA", "TX", "LA", "AL", "FL", "AR", "TN", "KY", "SC",
"OK", "MO", "NC", "VA", "MT", "KS", "CO", "CA", "IN", "WV", "WY",
"NE", "IL", "MD", "NM", "IA", "OH", "WA", "AZ", "SD", "ND", "ID",
"MI", "MN", "NV", "OR", "WI", "UT", "NY", "PA", "CT", "DE", "NJ"
))
df.4 <- df.3 %>% dplyr::filter(state %in% levels(df.3$state)[1:12])
p <- ggplot(df.4, aes(year, deaths, group = state, color = state))
p <- p + geom_line()
p <- p + facet_wrap(vars(state))
p <- p + theme_minimal()
p <- p + theme(legend.position = "none")
p <- p + geom_smooth()
p <- p + labs(title = "Annual U.S. Lynchings by State",
subtitle = "1882 to 1936",
caption = "Source: Project HAL & Seguin")
p
df.0 %>%
group_by(race, gender) %>%
tally() %>%
treemap(index=c("gender", "race"),
vSize="n",
type="index",
palette = cbPalette,
title = "Lynching Demographics--Gender & Race"
)
# system & package info
options(width = 120)
session_info()
blogdown::serve_site()
library(leaflet)
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df) <- tolower(colnames(df))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.1 <-
df %>%
select(all_of(my.cols))
m <-    leaflet(df.1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.1$lon),
lat1 = min(df.1$lat),
lng2 = min(df.1$lon),
lat2 = max(df.1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.1$date, "<br>",
"Victim:", df.1$victim, "<br>",
"Race:", df.1$race, "<br>",
"Gender:", df.1$gender),
clusterOptions = markerClusterOptions()
)
frameWidget(m)
library(leaflet)
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df.m <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df) <- tolower(colnames(df))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.m1 <-
df.m %>%
select(all_of(my.cols))
m <-    leaflet(df.1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.1$lon),
lat1 = min(df.1$lat),
lng2 = min(df.1$lon),
lat2 = max(df.1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.1$date, "<br>",
"Victim:", df.1$victim, "<br>",
"Race:", df.1$race, "<br>",
"Gender:", df.1$gender),
clusterOptions = markerClusterOptions()
)
frameWidget(m)
blogdown::serve_site()
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df.m <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df.m) <- tolower(colnames(df.m))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.m1 <-
df.m %>%
select(all_of(my.cols))
m <-    leaflet(df.1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.1$lon),
lat1 = min(df.1$lat),
lng2 = min(df.1$lon),
lat2 = max(df.1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.1$date, "<br>",
"Victim:", df.1$victim, "<br>",
"Race:", df.1$race, "<br>",
"Gender:", df.1$gender),
clusterOptions = markerClusterOptions()
)
m <-    leaflet(df.1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.1$lon),
lat1 = min(df.1$lat),
lng2 = min(df.1$lon),
lat2 = max(df.1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.m1$date, "<br>",
"Victim:", df.m1$victim, "<br>",
"Race:", df.m1$race, "<br>",
"Gender:", df.m1$gender),
clusterOptions = markerClusterOptions()
)
library(leaflet)
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df.m <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df.m) <- tolower(colnames(df.m))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.m1 <-
df.m %>%
select(all_of(my.cols))
m <-    leaflet(df.m1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.m1$lon),
lat1 = min(df.m1$lat),
lng2 = min(df.m1$lon),
lat2 = max(df.m1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.m1$date, "<br>",
"Victim:", df.m1$victim, "<br>",
"Race:", df.m1$race, "<br>",
"Gender:", df.m1$gender),
clusterOptions = markerClusterOptions()
)
frameWidget(m)
blogdown::serve_site()
input <- "~/Dropbox/public/datasets/2021-06-05-us_lynchings.csv"
df.0 <- data.table::fread(input = input)
range(df.0$date)
range(df.0$date, na.rm = T)
?frameWidget
devtools::install_github("lmullen/mullenMisc")
library(mullenMisc)
df.m1$lat <- jitter_latlong(df.m1$lat, type = "lat", km = 3)
df.m1$lon <- jitter_latlong(df.m1$lon, type = "lon", km = 3)
df.m1$lon <- jitter_latlong(df.m1$lon, type = "long", km = 3)
df.m1$lon <- jitter_latlong(df.m1$lon, type = "long", latitude, km = 3)
df.m1 <-
df.m %>%
select(all_of(my.cols))
library(mullenMisc)
df.m1$lat <- jitter_latlong(df.m1$lat, type = "lat", km = 3)
df.m1$lon <- jitter_latlong(df.m1$lon, type = "long", latitude = lat, km = 3)
df.m1$lon <- jitter_latlong(df.m1$lon, type = "long", latitude = "lat", km = 3)
?jitter
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df.m <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df.m) <- tolower(colnames(df.m))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.m1 <-
df.m %>%
select(all_of(my.cols))
df.m1$lat <- jitter(df.m1$lat, factor = .0001)
df.m1$lon <- jitter_latlong(df.m1$lon, factor = .0001)
df.m1$lon <- jitter(df.m1$lon, factor = .0001)
m <-    leaflet(df.m1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.m1$lon),
lat1 = min(df.m1$lat),
lng2 = min(df.m1$lon),
lat2 = max(df.m1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.m1$date, "<br>",
"County: ", df.m1$county, "<br>",
"Victim: ", df.m1$victim, "<br>",
"Race: ", df.m1$race, "<br>",
"Gender: ", df.m1$gender),
clusterOptions = markerClusterOptions()
)
frameWidget(m)
blogdown::serve_site()
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'treemap',
'leaflet',
'widgetframe',
'htmlwidgets'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
## Do not break chunk line
## Do not use spaces or periods "." or underscores "_"
## set options for knitr
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=T,
comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
input <- "~/Dropbox/public/datasets/2021-06-05-us_lynchings.csv"
df.0 <- data.table::fread(input = input)
library(leaflet)
#import
input <- "https://dl.dropbox.com/s/hj75ux1ndz1w5h1/2021-06-06-us-lynchings-geocode.csv?dl=0"
df.m <- data.table::fread(input = input, check.names = T)
#variable names
colnames(df.m) <- tolower(colnames(df.m))
my.cols <- c("fips", "state", "county", "lat", "lon", "date",
"victim", "race", "gender")
df.m1 <-
df.m %>%
select(all_of(my.cols))
df.m1$lat <- jitter(df.m1$lat, factor = .0001)
df.m1$lon <- jitter(df.m1$lon, factor = .0001)
m <-    leaflet(df.m1) %>%
addTiles() %>%
setView(lng = -84.32,
lat = 37.52,
zoom = 8
) %>%
# set boundaries for map
fitBounds(lng1 = max(df.m1$lon),
lat1 = min(df.m1$lat),
lng2 = min(df.m1$lon),
lat2 = max(df.m1$lat)
) %>%
addCircleMarkers(lng = ~lon,
lat = ~lat,
radius = 1,
popup = paste("Date: ", df.m1$date, "<br>",
"County: ", df.m1$county, "<br>",
"Victim: ", df.m1$victim, "<br>",
"Race: ", df.m1$race, "<br>",
"Gender: ", df.m1$gender),
clusterOptions = markerClusterOptions()
)
frameWidget(m)
df.0 %>%
group_by(dataset, year = lubridate::floor_date(date, "year")) %>%
tally(name = "deaths") %>%
ggplot(aes(year, deaths, group = dataset, color = dataset)) +
geom_line() +
theme_minimal() +
labs(title = "Annual U.S. Lynchings by Dataset",
subtitle = "1882 to 1936",
caption = "Source: Project HAL & Seguin")
df.0 %>%
group_by(year = lubridate::floor_date(date, "year")) %>%
tally(name = "deaths") %>%
ggplot(aes(year, deaths)) +
geom_line() +
theme_minimal() +
labs(title = "Total Annual U.S. Lynchings",
subtitle = "1882 to 1936",
caption = "Source: Project HAL & Seguin"
)
df.3 <-
df.0 %>%
group_by(state, year = lubridate::floor_date(date, "year")) %>%
tally(name = "deaths")
df.3$state <- factor(df.3$state,
levels = c("MS", "GA", "TX", "LA", "AL", "FL", "AR", "TN", "KY", "SC",
"OK", "MO", "NC", "VA", "MT", "KS", "CO", "CA", "IN", "WV", "WY",
"NE", "IL", "MD", "NM", "IA", "OH", "WA", "AZ", "SD", "ND", "ID",
"MI", "MN", "NV", "OR", "WI", "UT", "NY", "PA", "CT", "DE", "NJ"
))
df.4 <- df.3 %>% dplyr::filter(state %in% levels(df.3$state)[1:12])
p <- ggplot(df.4, aes(year, deaths, group = state, color = state))
p <- p + geom_line()
p <- p + facet_wrap(vars(state))
p <- p + theme_minimal()
p <- p + theme(legend.position = "none")
p <- p + geom_smooth()
p <- p + labs(title = "Annual U.S. Lynchings by State",
subtitle = "1882 to 1936",
caption = "Source: Project HAL & Seguin")
p
df.0 %>%
group_by(race, gender) %>%
tally() %>%
treemap(index=c("gender", "race"),
vSize="n",
type="index",
palette = cbPalette,
title = "Lynching Demographics--Gender & Race"
)
# system & package info
options(width = 120)
session_info()
blogdown::serve_site()
colnames(df.m1)
?frameWidget
blogdown::serve_site()
?include_graphics
