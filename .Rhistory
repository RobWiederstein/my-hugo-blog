) +
# add scale
annotation_scale(pad_x = unit(3.5, "in")) +
# add labels
labs(title = "Square-uh-stan",
subtitle = "ggplot2",
x = "longitude",
y = "latitude",
caption = "Source: My Data Source") +
# add theme
theme_bw() +
theme(panel.grid.major = element_line(
color = gray(.5),
linetype = "dotted",
linewidth = 0.25),
panel.background = element_rect(
fill = "lightblue")
)
#load world map
afrc <- rnaturalearth::ne_countries(continent = "Africa")
# create simple features
land_1 <- st_polygon(list(rbind(c(-10, -10), c(-10, -15), c(-15, -15), c(-15, -10), c(-10, -10))))
land_2 <- land_1 * .75 + 7
lake <- land_1 * .25
mountain <- st_centroid(land_1 - 1)
pm <- st_linestring(matrix(c(0, -20, 0, 20), ncol = 2, byrow = T))
eq <- st_linestring(matrix(c(-20, 0, 20, 0), ncol = 2, byrow = T))
# sfc
land_sfc = st_sfc(list(land_1, land_2))
lake_sfc = st_sfc(lake)
mountain_sfc <- st_sfc(mountain)
pm_sfc <- st_sfc(pm)
eq_sfc <- st_sfc(eq)
# set CRS
land_sfc_wgs = st_sfc(land_sfc, crs = "EPSG:4326")
lake_sfc_wgs = st_sfc(lake_sfc, crs = "EPSG:4326")
mountain_sfc_wgs <- st_sfc(mountain_sfc, crs = "EPSG:4326")
pm_sfc_wgs <- st_sfc(pm_sfc, crs = "EPSG:4326")
eq_sfc_wgs <- st_sfc(eq_sfc, crs = "EPSG:4326")
View(lake_sfc_wgs)
library(sf)
#load world map
afrc <- rnaturalearth::ne_countries(continent = "Africa")
# create simple features
land_1 <- st_polygon(list(rbind(c(-10, -10), c(-10, -15), c(-15, -15), c(-15, -10), c(-10, -10))))
land_2 <- land_1 * .75 + 7
lake <- land_1 * .25
mountain <- st_centroid(land_1 - 1)
pm <- st_linestring(matrix(c(0, -20, 0, 20), ncol = 2, byrow = T))
eq <- st_linestring(matrix(c(-20, 0, 20, 0), ncol = 2, byrow = T))
# sfc
land_sfc = st_sfc(list(land_1, land_2))
lake_sfc = st_sfc(lake)
mountain_sfc <- st_sfc(mountain)
pm_sfc <- st_sfc(pm)
eq_sfc <- st_sfc(eq)
# set CRS
land_sfc_wgs = st_sfc(land_sfc, crs = "EPSG:4326")
lake_sfc_wgs = st_sfc(lake_sfc, crs = "EPSG:4326")
mountain_sfc_wgs <- st_sfc(mountain_sfc, crs = "EPSG:4326")
pm_sfc_wgs <- st_sfc(pm_sfc, crs = "EPSG:4326")
eq_sfc_wgs <- st_sfc(eq_sfc, crs = "EPSG:4326")
# add labels
country <- c("A", "B")
land_sfc_wgs_df = st_sf(country = country, land_sfc_wgs)
name <- "Mt. High"
mountain_sfc_wgs_df = st_sf(name = name, mountain_sfc_wgs)
name <- "Lake Clear"
lake_sfc_wgs_df <- st_sf(name = name, lake_sfc_wgs)
name <- "Equator"
eq_sfc_wgs_df <- st_sf(name = name, eq_sfc_wgs)
name <- "Prime Meridian"
pm_sfc_wgs_df <- st_sf(name = name, pm_sfc_wgs)
# plot ggplot2
library(ggplot2)
library(ggspatial)
ggplot() +
# add layers
geom_sf(data = afrc, fill = "antiquewhite") +
geom_sf(data = land_sfc_wgs_df, fill = "antiquewhite") +
geom_sf(data = lake_sfc_wgs_df, fill = "lightblue") +
geom_sf(data = mountain_sfc_wgs_df, color = "red", shape = 17, size = 3) +
geom_sf(data = pm_sfc_wgs_df, linetype = "dashed") +
geom_sf(data = eq_sfc_wgs_df, linetype = "dashed") +
# add annotations
geom_sf_text(data = land_sfc_wgs_df,
aes(label = country),
nudge_y = 1) +
geom_sf_text(data = mountain_sfc_wgs_df,
aes(label = name),
nudge_y = -.75,
nudge_x = .75) +
geom_sf_text(data = lake_sfc_wgs_df,
aes(label = name),
nudge_y = -1) +
geom_sf_text(data = eq_sfc_wgs_df,
aes(label = name),
nudge_y = .75,
nudge_x = 2.5,
color = "gray50",
fontface = "italic") +
annotate(geom = "text", x = -.75, y = -15, label = "Prime Meridian",
fontface = "italic", color = "grey50", angle = 90) +
# restrict frame
coord_sf(xlim = c(-20, 15),
ylim = c(-20, 10),
expand = F) +
# add direction
annotation_north_arrow(
which_north = "grid",
height = unit(.75, "cm"),
width = unit(.75, "cm"),
location = "br",
pad_x = unit(3.2, "cm"),
pad_y = unit(1, "cm")
) +
# add scale
annotation_scale(pad_x = unit(3.5, "in")) +
# add labels
labs(title = "Square-uh-stan",
subtitle = "ggplot2",
x = "longitude",
y = "latitude",
caption = "Source: My Data Source") +
# add theme
theme_bw() +
theme(panel.grid.major = element_line(
color = gray(.5),
linetype = "dotted",
linewidth = 0.25),
panel.background = element_rect(
fill = "lightblue")
)
knitr::include_graphics("./img/square-uh-stan_ggplot.jpg")
remotes::install_github("r-tmap/tmap")
library(tmap)
library(tmaptools)
tmap_options_reset()
box <- tmaptools::bb(afrc, xlim = c(-20, 15), ylim = c(-20, 10))
tm <-
tm_shape(afrc, bb = box) +
tm_borders("gray50", lwd = .25) +
tm_polygons(fill = "antiquewhite") +
tm_shape(land_sfc_wgs_df) +
tm_borders("gray50", lwd = .25) +
tm_polygons("country", fill = "antiquewhite") +
tm_text("country", ymod = 1) +
tm_shape(lake_sfc_wgs) +
tm_polygons(fill = "lightblue") +
tm_text("Lake Clear", ymod = -1.3, xmod =-1) +
tm_shape(mountain_sfc_wgs_df) +
tm_symbols(size = 1, fill = "red", shape = 17) +
tm_text("Mt. High", ymod = -.75, xmod = 1) +
tm_shape(eq_sfc_wgs_df) +
tm_lines(lty = "dotted") +
tm_text("Equator", xmod = -18, ymod = .5, fontface = "italic", alpha = .5, size = .75) +
tm_shape(pm_sfc_wgs_df) +
tm_lines(lty = "dotted") +
tm_text("Prime Meridian", ymod = -17, xmod = -.5, fontface = "italic",
alpha = .5, size = .75, angle = 90) +
tm_xlab("Longitude") +
tm_ylab("Latitude", rotation = 90) +
tm_grid(labels.show = T,  alpha = .5) +
tm_compass(position = c(.75, .25)) +
tm_scalebar() +
tm_title_in("Square-uh-stan",
size = 1.4,
padding = c(.5, 1, .5, 1),
position = tm_pos_in("left", "top"),
bg.color = "white",
frame = "black",
frame.lwd = 2) +
tm_layout(
bg.color = "lightblue",
inner.margins = 0,
frame = "grey50",
frame.lwd = 3,
frame.double.line = F,
outer.bg.color = "#00000000"
)
library(tmap)
library(tmaptools)
tmap_options_reset()
box <- tmaptools::bb(afrc, xlim = c(-20, 15), ylim = c(-20, 10))
tm <-
tm_shape(afrc, bb = box) +
tm_borders("gray50", lwd = .25) +
tm_polygons(fill = "antiquewhite") +
tm_shape(land_sfc_wgs_df) +
tm_borders("gray50", lwd = .25) +
tm_polygons("country", fill = "antiquewhite") +
tm_text("country", ymod = 1) +
tm_shape(lake_sfc_wgs) +
tm_polygons(fill = "lightblue") +
tm_text("Lake Clear", ymod = -1.3, xmod =-1) +
tm_shape(mountain_sfc_wgs_df) +
tm_symbols(size = 1, fill = "red", shape = 17) +
tm_text("Mt. High", ymod = -.75, xmod = 1) +
tm_shape(eq_sfc_wgs_df) +
tm_lines(lty = "dotted") +
tm_text("Equator", xmod = -18, ymod = .5, fontface = "italic", alpha = .5, size = .75) +
tm_shape(pm_sfc_wgs_df) +
tm_lines(lty = "dotted") +
tm_text("Prime Meridian", ymod = -17, xmod = -.5, fontface = "italic",
alpha = .5, size = .75, angle = 90) +
tm_xlab("Longitude") +
tm_ylab("Latitude", rotation = 90) +
tm_grid(labels.show = T,  alpha = .5) +
tm_compass(position = c(.75, .25)) +
tm_scalebar() +
tm_title_in("Square-uh-stan",
size = 1.4,
padding = c(.5, 1, .5, 1),
position = tm_pos_in("left", "top"),
bg.color = "white",
frame = "black",
frame.lwd = 2) +
tm_layout(
bg.color = "lightblue",
inner.margins = 0,
frame = "grey50",
frame.lwd = 3,
frame.double.line = F,
outer.bg.color = "#00000000"
)
tm
knitr::include_graphics("./img/square-uh-stan_tmap.png")
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'dplyr',
'tmap',
'ggplot2',
'rnaturalearth',
'ggspatial'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=T,
comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
knitr::include_graphics("./img/sfdiagram.png")
beijing <- sf::st_point(c(116.338348, 39.909982))
tokyo <- sf::st_point(c(139.488645, 35.720886))
city_geom <- sf::st_sfc(list(beijing, tokyo), crs = "EPSG:4326")
city_attrib <- data.frame(name = c("Beijing", "Tokyo"),
pop = c(14e6, 22e6),
date = as.Date("2022-01-01")
)
city_sf <- sf::st_sf(city_attrib, geometry = city_geom)
asia <- rnaturalearth::ne_countries(continent = "Asia")
chn_jap <- rnaturalearth::ne_countries(country = c("China", "Japan"))
plot(asia$geometry, axes = T)
plot(chn_jap$geometry, col = "gray90", add = T)
plot(city_sf["name"], add = T, pch = 16, cex = 1.5)
text(x = 110, y = 37, label = "Beijing", cex = .75)
text(x = 143, y = 31, label = "Tokyo", cex = .75)
title("Capitals of China and Japan")
library(sf)
#load world map
afrc <- rnaturalearth::ne_countries(continent = "Africa")
# create simple features
land_1 <- st_polygon(list(rbind(c(-10, -10), c(-10, -15), c(-15, -15), c(-15, -10), c(-10, -10))))
land_2 <- land_1 * .75 + 7
lake <- land_1 * .25
mountain <- st_centroid(land_1 - 1)
pm <- st_linestring(matrix(c(0, -20, 0, 20), ncol = 2, byrow = T))
eq <- st_linestring(matrix(c(-20, 0, 20, 0), ncol = 2, byrow = T))
# sfc
land_sfc = st_sfc(list(land_1, land_2))
lake_sfc = st_sfc(lake)
mountain_sfc <- st_sfc(mountain)
pm_sfc <- st_sfc(pm)
eq_sfc <- st_sfc(eq)
# set CRS
land_sfc_wgs = st_sfc(land_sfc, crs = "EPSG:4326")
lake_sfc_wgs = st_sfc(lake_sfc, crs = "EPSG:4326")
mountain_sfc_wgs <- st_sfc(mountain_sfc, crs = "EPSG:4326")
pm_sfc_wgs <- st_sfc(pm_sfc, crs = "EPSG:4326")
eq_sfc_wgs <- st_sfc(eq_sfc, crs = "EPSG:4326")
# add labels
country <- c("A", "B")
land_sfc_wgs_df = st_sf(country = country, land_sfc_wgs)
name <- "Mt. High"
mountain_sfc_wgs_df = st_sf(name = name, mountain_sfc_wgs)
name <- "Lake Clear"
lake_sfc_wgs_df <- st_sf(name = name, lake_sfc_wgs)
name <- "Equator"
eq_sfc_wgs_df <- st_sf(name = name, eq_sfc_wgs)
name <- "Prime Meridian"
pm_sfc_wgs_df <- st_sf(name = name, pm_sfc_wgs)
knitr::include_graphics("./img/square-uh-stan_ggplot.jpg")
knitr::include_graphics("./img/square-uh-stan_tmap.png")
# system & package info
options(width = 120)
session_info()
detach("package:tmap", unload = TRUE)
remove.packages("tmap")
install.packages("tmap")
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown',
'dplyr',
'tmap',
'ggplot2',
'rnaturalearth',
'ggspatial'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=T,
comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
knitr::include_graphics("./img/sfdiagram.png")
beijing <- sf::st_point(c(116.338348, 39.909982))
tokyo <- sf::st_point(c(139.488645, 35.720886))
city_geom <- sf::st_sfc(list(beijing, tokyo), crs = "EPSG:4326")
city_attrib <- data.frame(name = c("Beijing", "Tokyo"),
pop = c(14e6, 22e6),
date = as.Date("2022-01-01")
)
city_sf <- sf::st_sf(city_attrib, geometry = city_geom)
asia <- rnaturalearth::ne_countries(continent = "Asia")
chn_jap <- rnaturalearth::ne_countries(country = c("China", "Japan"))
plot(asia$geometry, axes = T)
plot(chn_jap$geometry, col = "gray90", add = T)
plot(city_sf["name"], add = T, pch = 16, cex = 1.5)
text(x = 110, y = 37, label = "Beijing", cex = .75)
text(x = 143, y = 31, label = "Tokyo", cex = .75)
title("Capitals of China and Japan")
library(sf)
#load world map
afrc <- rnaturalearth::ne_countries(continent = "Africa")
# create simple features
land_1 <- st_polygon(list(rbind(c(-10, -10), c(-10, -15), c(-15, -15), c(-15, -10), c(-10, -10))))
land_2 <- land_1 * .75 + 7
lake <- land_1 * .25
mountain <- st_centroid(land_1 - 1)
pm <- st_linestring(matrix(c(0, -20, 0, 20), ncol = 2, byrow = T))
eq <- st_linestring(matrix(c(-20, 0, 20, 0), ncol = 2, byrow = T))
# sfc
land_sfc = st_sfc(list(land_1, land_2))
lake_sfc = st_sfc(lake)
mountain_sfc <- st_sfc(mountain)
pm_sfc <- st_sfc(pm)
eq_sfc <- st_sfc(eq)
# set CRS
land_sfc_wgs = st_sfc(land_sfc, crs = "EPSG:4326")
lake_sfc_wgs = st_sfc(lake_sfc, crs = "EPSG:4326")
mountain_sfc_wgs <- st_sfc(mountain_sfc, crs = "EPSG:4326")
pm_sfc_wgs <- st_sfc(pm_sfc, crs = "EPSG:4326")
eq_sfc_wgs <- st_sfc(eq_sfc, crs = "EPSG:4326")
# add labels
country <- c("A", "B")
land_sfc_wgs_df = st_sf(country = country, land_sfc_wgs)
name <- "Mt. High"
mountain_sfc_wgs_df = st_sf(name = name, mountain_sfc_wgs)
name <- "Lake Clear"
lake_sfc_wgs_df <- st_sf(name = name, lake_sfc_wgs)
name <- "Equator"
eq_sfc_wgs_df <- st_sf(name = name, eq_sfc_wgs)
name <- "Prime Meridian"
pm_sfc_wgs_df <- st_sf(name = name, pm_sfc_wgs)
knitr::include_graphics("./img/square-uh-stan_ggplot.jpg")
knitr::include_graphics("./img/square-uh-stan_tmap.png")
# system & package info
options(width = 120)
session_info()
blogdown::serve_site()
install.packages("formatR")
blogdown::stop_server()
blogdown::serve_site()
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
## Do not break chunk line
## Do not use spaces or periods "." or underscores "_"
## set options for knitr
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=T,
comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
p <- ggplot(mtcars, aes(mpg, hp, group = cyl, colour = cyl))
p <- p + scale_color_manual(values = cbPalette)
p <- p + geom_point(size = 2)
p <- p + ggtitle("mtcars")
p
knitr::include_graphics("./upwelling-graphic-scaled.jpg")
# system & package info
options(width = 120)
session_info()
blogdown::build_site()
blogdown:::new_post_addin()
blogdown::build_site()
## Load frequently used packages for blog posts
packages <- c(
'devtools', #for session info
'ggthemes', #for plots
'blogdown'
)
lapply(packages, function(x) {
if (!requireNamespace(x)) install.packages(x)
library(x, character.only = TRUE)
})
## Do not break chunk line
## Do not use spaces or periods "." or underscores "_"
## set options for knitr
knitr::opts_chunk$set(
comment = '',
fig.width = 6,
fig.asp = .8,
fig.align="center",
message=F,
error=F,
warning=F,
tidy=T,
comment='',
cache=T,
dev='svg',
echo=F
)
#from ggthemes
library(ggplot2); theme_set(ggthemes::theme_fivethirtyeight())
# color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# write packages used to bib in current directory
knitr::write_bib(.packages(), "./packages.bib")
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
p <- ggplot(mtcars, aes(mpg, hp, group = cyl, colour = cyl))
p <- p + scale_color_manual(values = cbPalette)
p <- p + geom_point(size = 2)
p <- p + ggtitle("mtcars")
p
# system & package info
options(width = 120)
session_info()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
install.packages("usethis")
?usethis::`usethis-package`
install.packages("gitcreds")
?gitcreds::gitcreds_set
use_github()
usethis::use_github()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
