library(citr)
detach("package:citr", unload = TRUE)
uninstall(citr)
remove.packages("citr")
devtools::install_github("crsh/citr")
df <- mtcars
df %>% group_by(cyl) %>% summarize(min = min(mpg))
df %>% group_by(cyl) %>% summarize(min = min(mpg))
?slice
df %>% group_by(cyl) %>% slice(1L)
df %>% group_by(cyl) %>% slice(5L)
df.1 <- df %>% group_by(cyl) %>% slice(5L)
View(df.1)
df.1 <- df %>% group_by(cyl) %>% slice(mpg, 5L)
df.1 <- df %>% group_by(cyl) %>% slice(mpg, n = 5)
df %>% group_by(cyl) %>% slice(mpg, n = 5)
df.1 <- df %>% group_by(cyl) %>% arrange(mpg)
View(df.1)
df.1 <- df %>% group_by(cyl) %>% mutate(rank = rank(mpg))
View(df.1)
?rank
View(df.1)
df.1 <- df %>%
group_by(cyl) %>%
mutate(rank = rank(mpg, ties.method = "first")) %>%
dplyr::filter(rank == 5)
View(df.1)
View(df.1)
a.key <- data.frame(number = c(1, ncol(mtcars)),
key = colnames(mtcars))
ncol(mtcars)
colnames(mtcars)
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars))
t(a.key)
a.key <- t(a.key)
a.key <- data.frame(t(a.key))
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars))
a.key <- data.frame(t(a.key))
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars),
stringsAsFactors = F)
a.key <- data.frame(t(a.key))
a.key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars),
stringsAsFactors = F)
View(a.key)
a.key
key <- data.frame(number = c(1: ncol(mtcars)),
key = colnames(mtcars),
stringsAsFactors = F)
key
print(key)
?print
require(stats)
ts(1:20)
for(i in 1:3) print(1:i)
t1 <- round(abs(rt(200, df = 1.8)))
t2 <- round(abs(rt(200, df = 1.4)))
table(t1, t2) # simple
print(table(t1, t2), zero.print = ".")
key
df %>% arrange(cyl, mpg)
df %>% group_by(cyl) %>% slice(mpg, n = 5)
df
str(df)
df %>% group_by(cyl) %>% slice(n = 5)
df %>% group_by(cyl, mpg) %>% slice(n = 5)
df %>% group_by(cyl) %>% slice(n = 5)
View(df)
df %>% group_by(cyl) %>% arrange(mpg) %>% slice(n = 5) #5th one
df %>%  arrange(cyl, mpg) %>% group_by(cyl) %>% slice(n = 5) #5th one
setwd("./blogdown-even")
blogdown::build_site()
blogdown::serve_site()
library(magrittr)
library(htmlwidgets)
library(leaflet)
library(widgetframe)
library(leaflet)
library(widgetframe)
library(magrittr)
l % addTiles() %>% setView(0,0,1)
library(htmlwidgets)
library(leaflet)
library(widgetframe)
library(leaflet)
library(widgetframe)
library(magrittr)
l %>% addTiles() %>% setView(0,0,1)
?leaflet
library(leaflet)
library(widgetframe)
library(magrittr)
m <- leaflet() %>% addTiles()
frameWidget(m)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidget", "magrittr")
lapply(my.pkgs, library, character.only = T)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidgets", "magrittr")
lapply(my.pkgs, library, character.only = T)
?library
lapply(my.pkgs, library, character.only = T, quietly = T)
lapply(my.pkgs, library, character.only = T, quietly = T, verbose = F)
my.pkgs <- c("leaflet", "widgetframe", "htmlwidgets", "magrittr")
lapply(my.pkgs, function(x) suppressPackageStartupMessages(library(x, character.only = T)))
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
setwd("..")
blogdown::new_site
blogdown::install_hugo
?blogdown::`blogdown-package`
blogdown::new_post
function (title, kind = "", open = interactive(), author = getOption("blogdown.author"),
categories = NULL, tags = NULL, date = Sys.Date(), file = NULL,
slug = NULL, title_case = getOption("blogdown.title_case"),
subdir = getOption("blogdown.subdir", "post"), ext = getOption("blogdown.ext",
".md"))
{
if (is.null(file))
file = post_filename(title, subdir, ext, date)
file = trim_ws(file)
if (missing(kind))
kind = default_kind(file)
if (is.null(slug) && auto_slug())
slug = post_slug(file)
slug = trim_ws(slug)
if (generator() == "hugo")
file = new_content(file, kind, FALSE)
else {
writeLines(c("---", "", "---"), file)
}
if (isTRUE(title_case))
title_case = tools::toTitleCase
if (is.function(title_case))
title = title_case(title)
if (get_option("blogdown.warn.future", TRUE)) {
if (isTRUE(tryCatch(date > Sys.Date(), error = function(e) FALSE)))
warning("The date of the post is in the future: ",
date, ". See ", "https://github.com/rstudio/blogdown/issues/377 for consequences, ",
"and see https://alison.rbind.io/post/2019-03-04-hugo-troubleshooting/#dates ",
"for a workaround by distinguishing date and publishDate in YAML header. ",
"To turn off this warning, set options(blogdown.warn.future = FALSE).")
}
do.call(modify_yaml, c(list(file, title = title, author = author,
date = format(date), slug = slug, categories = as.list(categories),
tags = as.list(tags)), if (!file.exists("archetypes/default.md")) list(draft = NULL)))
open_file(file, open)
file
}
x <- function (title, kind = "", open = interactive(), author = getOption("blogdown.author"),
categories = NULL, tags = NULL, date = Sys.Date(), file = NULL,
slug = NULL, title_case = getOption("blogdown.title_case"),
subdir = getOption("blogdown.subdir", "post"), ext = getOption("blogdown.ext",
".md"))
{
if (is.null(file))
file = post_filename(title, subdir, ext, date)
file = trim_ws(file)
if (missing(kind))
kind = default_kind(file)
if (is.null(slug) && auto_slug())
slug = post_slug(file)
slug = trim_ws(slug)
if (generator() == "hugo")
file = new_content(file, kind, FALSE)
else {
writeLines(c("---", "", "---"), file)
}
if (isTRUE(title_case))
title_case = tools::toTitleCase
if (is.function(title_case))
title = title_case(title)
if (get_option("blogdown.warn.future", TRUE)) {
if (isTRUE(tryCatch(date > Sys.Date(), error = function(e) FALSE)))
warning("The date of the post is in the future: ",
date, ". See ", "https://github.com/rstudio/blogdown/issues/377 for consequences, ",
"and see https://alison.rbind.io/post/2019-03-04-hugo-troubleshooting/#dates ",
"for a workaround by distinguishing date and publishDate in YAML header. ",
"To turn off this warning, set options(blogdown.warn.future = FALSE).")
}
do.call(modify_yaml, c(list(file, title = title, author = author,
date = format(date), slug = slug, categories = as.list(categories),
tags = as.list(tags)), if (!file.exists("archetypes/default.md")) list(draft = NULL)))
open_file(file, open)
file
}
args(x)
setwd("./blogdown-default/")
library(blogdown)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
iris[1:5]
data(iris)
list(iris[1:5])
data(iris)
as.list(iris[1:5])
as.list(iris[1:5, 1:5])
as_xml_document(as.list(iris[1:5, 1:5]))
my.l <- as.list(iris[1:5, 1:5]))
my.l <- as.list(iris[1:5, 1:5])
data(iris)
my.l <- as.list(iris[1:5, 1:5])
as_xml_document(my.l)
my.l <- as.list(iris = iris[1:5, 1:5])
data(iris)
my.l <- as.list(iris = iris[1:5, 1:5])
my.l <- list(iris = iris[1:5, 1:5])
as_xml_document(my.l)
library(xml2)
data(iris)
my.l <- list(iris = iris[1:5, 1:5])
as_xml_document(my.l)
print(as_xml_document(my.l))
data(iris)
my.l <- list(iris = iris[1:5, 1:5])
my.xml <- as_xml_document(my.l)
my.xml
xml_structure(my.xml)
my.xml
xml_text(my.xml)
attr(my.xml)
attrs(my.xml)
str(my.xml)
data(iris)
my.l <- list(iris = iris[1:5, 1:5])
my.xml <- as_xml_document(my.l)
str(my.xml)
my.xml
blogdown::serve_site()
serve_site()
#get W3 data
url <- "https://www.w3schools.com/xml/simple.xml"
# read list
bkfst <- read_xml(x = url)
xml_structure(bkfst)
xml_structure(bkfst)[1:10]
xml_structure(bkfst[1:10])
print(xml_structure(bkfst), 1:10)
?print
xml_structure(bkfst)
xml_text(bkfst)
# see text
xml_text(bkfst)
xml_text(bkfst)
xml_name(bkfst)
xml_contents(bkfst)
xml_type(xml_contents(bkfst))
serve_site()
xml_find_all(bkfst, xpath = "//name")
xml_text(xml_find_all(bkfst, xpath = "//name"))
name <- xml_text(xml_find_all(bkfst, xpath = "//name"))
price <- xml_text(xml_find_all(bkfst, xpath = "//price"))
df <- tibble(name = name, price = price)
library(tibble)
name <- xml_text(xml_find_all(bkfst, xpath = "//name"))
price <- xml_text(xml_find_all(bkfst, xpath = "//price"))
df <- tibble(name = name, price = price)
df
xml_find_all(bkfst, xpath = "food")
xml_find_all(bkfst, xpath = "breakfast_menu")
xml_find_all(bkfst, xpath = "//name")
serve_site()
xml_children(bkfst)
xml_path(bkfst)
xml_path(name)
